{
	"id": "d88a54dc0e21d8eda36934ee4e8ad5a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol": {
				"content": "/*\r\n\r\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\r\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\r\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\r\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\r\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\r\n\r\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\r\nTwitter: https://twitter.com/cookbook_dev\r\nDiscord: https://discord.gg/cookbookdev\r\n\r\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\n\r\n/**\r\n * @title NFT Staking with Infinite Rewards\r\n * @author Breakthrough Labs Inc.\r\n * @notice Staking, NFT, ERC721\r\n * @dev NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate,\r\n * and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT\r\n * rate stays the same even when the number of staked NFTs increases/decreases.\r\n *\r\n * A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day.\r\n *\r\n */\r\n\r\ncontract NFTStakingPerToken is Context, IERC721Receiver {\r\n    IERC721 public nft;\r\n    IERC20 public rewardToken;\r\n    address public rewardWallet;\r\n    uint256 public rewardPerTokenPerDay;\r\n\r\n    mapping(uint256 => address) private stakedTokens;\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => uint256) public lastUpdateTime;\r\n    mapping(address => uint256) private reward;\r\n\r\n    /**\r\n     * @param nftAddress  Staked NFT Address\r\n     * @param rewardTokenAddress Reward Token Address\r\n     * @param rewardWalletAddress Wallet that holds rewards to be paid out\r\n     * @param rewardRate # of tokens per staked NFT per day | precision:18\r\n     */\r\n    constructor(\r\n        address nftAddress,\r\n        address rewardTokenAddress,\r\n        address rewardWalletAddress,\r\n        uint256 rewardRate\r\n    ) {\r\n        nft = IERC721(nftAddress);\r\n        rewardToken = IERC20(rewardTokenAddress);\r\n        rewardWallet = rewardWalletAddress;\r\n        rewardPerTokenPerDay = rewardRate;\r\n    }\r\n\r\n    modifier update(address account) {\r\n        reward[account] = available(account);\r\n        lastUpdateTime[account] = block.timestamp;\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev returns the number of reward tokens available for an address\r\n     * @param account account\r\n     */\r\n    function available(address account) public view returns (uint256) {\r\n        uint256 timeElapsed = block.timestamp - lastUpdateTime[account];\r\n        uint256 earned = (balanceOf[account] *\r\n            timeElapsed *\r\n            rewardPerTokenPerDay) / 86400;\r\n        return reward[account] + earned;\r\n    }\r\n\r\n    /**\r\n     * @dev stakes a specific tokenID\r\n     * @param tokenId tokenId\r\n     */\r\n    function stake(uint256 tokenId) external {\r\n        nft.safeTransferFrom(_msgSender(), address(this), tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev withdraws a token from the staking contract\r\n     * @param tokenId tokenId\r\n     */\r\n    function withdraw(uint256 tokenId) external update(_msgSender()) {\r\n        require(stakedTokens[tokenId] == _msgSender(), \"Token is not staked.\");\r\n        delete stakedTokens[tokenId];\r\n        balanceOf[_msgSender()]--;\r\n        nft.transferFrom(address(this), _msgSender(), tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev redeems all of a user's reward tokens.\r\n     */\r\n function redeem() external update(_msgSender()) {\r\n    uint256 amount = reward[_msgSender()];\r\n    require(amount > 0, \"Nothing to redeem\");\r\n    reward[_msgSender()] = 0;\r\n\r\n    uint256 allowance = rewardToken.allowance(rewardWallet, address(this));\r\n    uint256 rewardWalletBalance = rewardToken.balanceOf(rewardWallet);\r\n    require(allowance >= amount, \"Check the reward wallet's allowance\");\r\n    require(rewardWalletBalance >= amount, \"Check the reward wallet's balance\");\r\n\r\n    rewardToken.transferFrom(rewardWallet, _msgSender(), amount);\r\n}\r\n\r\n\r\n     function  onERC721Received(\r\n        address,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata\r\n    ) external override update(from) returns (bytes4) {\r\n        stakedTokens[tokenId] = from;\r\n        balanceOf[from]++;\r\n        return IERC721Receiver.onERC721Received.selector;\r\n    }\r\n}\r\n\r\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c3594de8c76bcbcca23da7404be3d6a37ccf5aa180131a4e1ec6061c5ae9a4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de1e3982bb9eab077edb88d0713b198144cf92cb026b7861f013dd4e2dceda37\",\"dweb:/ipfs/QmT2fDWiXWTS1inFZHKHNqBYk6wEnvRBaMs3Bv8pUea3cS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xd8eb2b2b53d69c8aa57361d6537ae021a7cd871bd95fedc5112800779adce272\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348281480b60313dcfef92f916c5811f455032f4e6b00f5aa23c1b1456e093b4\",\"dweb:/ipfs/QmUQ2D5TCeqLpeqUKKp4ecVmMq4Duuwr5e2MPB2q4i3SnZ\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x9571dc622ba98744f680dc3a9f6b048cb3c64ad6e0192eafd9076bf424e74a98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f80cd0226eb2369aa5e171b0c55c44711a3505d2b0b95dc3666c5d263d55a36\",\"dweb:/ipfs/QmbDYnnYYseMmz2ZrrfVcx7MYxB6bsUQSz4P8Vx7uM2MHr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x6cba82b4ead8a759faa8fa9780dbd4d773e85a4f58b691b385fe01f5e8851e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dab56a044b51452b613f1fe11154d2316a46135af82bd0c6518e3c66be95de5\",\"dweb:/ipfs/QmPN7H9E4w1YoYHfhbqsSHi8qJME5ops24EcbkUAciqsyc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xc42291a7c5f437f1ffa8493e6be66d5310dffac8f90caa96a8bff68c51e56d9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72808a4108b4352382d530f6d9f71a836223ab4017249ce4e3d1d9689dba0e8a\",\"dweb:/ipfs/QmQ75ByNcZko5Ym14mk4WrcM9Wrpqo18tjgDFMtrekeyZh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x9571dc622ba98744f680dc3a9f6b048cb3c64ad6e0192eafd9076bf424e74a98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f80cd0226eb2369aa5e171b0c55c44711a3505d2b0b95dc3666c5d263d55a36\",\"dweb:/ipfs/QmbDYnnYYseMmz2ZrrfVcx7MYxB6bsUQSz4P8Vx7uM2MHr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol": {
				"NFTStakingPerToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardWalletAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "available",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redeem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenPerDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Breakthrough Labs Inc.",
						"details": "NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate, and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT rate stays the same even when the number of staked NFTs increases/decreases. A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day.",
						"kind": "dev",
						"methods": {
							"available(address)": {
								"details": "returns the number of reward tokens available for an address",
								"params": {
									"account": "account"
								}
							},
							"constructor": {
								"params": {
									"nftAddress": "Staked NFT Address",
									"rewardRate": "# of tokens per staked NFT per day | precision:18",
									"rewardTokenAddress": "Reward Token Address",
									"rewardWalletAddress": "Wallet that holds rewards to be paid out"
								}
							},
							"redeem()": {
								"details": "redeems all of a user's reward tokens."
							},
							"stake(uint256)": {
								"details": "stakes a specific tokenID",
								"params": {
									"tokenId": "tokenId"
								}
							},
							"withdraw(uint256)": {
								"details": "withdraws a token from the staking contract",
								"params": {
									"tokenId": "tokenId"
								}
							}
						},
						"title": "NFT Staking with Infinite Rewards",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2362:5549  contract NFTStakingPerToken is Context, IERC721Receiver {\r... */\n  mstore(0x40, 0x80)\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3044:3380  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3221:3231  nftAddress */\n  dup4\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3207:3210  nft */\n  0x00\n  dup1\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3207:3232  nft = IERC721(nftAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3264:3282  rewardTokenAddress */\n  dup3\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3243:3254  rewardToken */\n  0x01\n  0x00\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3243:3283  rewardToken = IERC20(rewardTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3309:3328  rewardWalletAddress */\n  dup2\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3294:3306  rewardWallet */\n  0x02\n  0x00\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3294:3328  rewardWallet = rewardWalletAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3362:3372  rewardRate */\n  dup1\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3339:3359  rewardPerTokenPerDay */\n  0x03\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3339:3372  rewardPerTokenPerDay = rewardRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3044:3380  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2362:5549  contract NFTStakingPerToken is Context, IERC721Receiver {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_12:\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_14\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":219:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:1058   */\ntag_3:\n  0x00\n  dup1\n  0x00\n  dup1\n    /* \"#utility.yul\":475:478   */\n  0x80\n    /* \"#utility.yul\":463:472   */\n  dup6\n    /* \"#utility.yul\":454:461   */\n  dup8\n    /* \"#utility.yul\":450:473   */\n  sub\n    /* \"#utility.yul\":446:479   */\n  slt\n    /* \"#utility.yul\":443:445   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":492:493   */\n  0x00\n    /* \"#utility.yul\":489:490   */\n  dup1\n    /* \"#utility.yul\":482:494   */\n  revert\n    /* \"#utility.yul\":443:445   */\ntag_17:\n    /* \"#utility.yul\":535:536   */\n  0x00\n    /* \"#utility.yul\":560:624   */\n  tag_18\n    /* \"#utility.yul\":616:623   */\n  dup8\n    /* \"#utility.yul\":607:613   */\n  dup3\n    /* \"#utility.yul\":596:605   */\n  dup9\n    /* \"#utility.yul\":592:614   */\n  add\n    /* \"#utility.yul\":560:624   */\n  tag_8\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":550:624   */\n  swap5\n  pop\n    /* \"#utility.yul\":506:634   */\n  pop\n    /* \"#utility.yul\":673:675   */\n  0x20\n    /* \"#utility.yul\":699:763   */\n  tag_19\n    /* \"#utility.yul\":755:762   */\n  dup8\n    /* \"#utility.yul\":746:752   */\n  dup3\n    /* \"#utility.yul\":735:744   */\n  dup9\n    /* \"#utility.yul\":731:753   */\n  add\n    /* \"#utility.yul\":699:763   */\n  tag_8\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":689:763   */\n  swap4\n  pop\n    /* \"#utility.yul\":644:773   */\n  pop\n    /* \"#utility.yul\":812:814   */\n  0x40\n    /* \"#utility.yul\":838:902   */\n  tag_20\n    /* \"#utility.yul\":894:901   */\n  dup8\n    /* \"#utility.yul\":885:891   */\n  dup3\n    /* \"#utility.yul\":874:883   */\n  dup9\n    /* \"#utility.yul\":870:892   */\n  add\n    /* \"#utility.yul\":838:902   */\n  tag_8\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":828:902   */\n  swap3\n  pop\n    /* \"#utility.yul\":783:912   */\n  pop\n    /* \"#utility.yul\":951:953   */\n  0x60\n    /* \"#utility.yul\":977:1041   */\n  tag_21\n    /* \"#utility.yul\":1033:1040   */\n  dup8\n    /* \"#utility.yul\":1024:1030   */\n  dup3\n    /* \"#utility.yul\":1013:1022   */\n  dup9\n    /* \"#utility.yul\":1009:1031   */\n  add\n    /* \"#utility.yul\":977:1041   */\n  tag_12\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":967:1041   */\n  swap2\n  pop\n    /* \"#utility.yul\":922:1051   */\n  pop\n    /* \"#utility.yul\":433:1058   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1064:1160   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":1130:1154   */\n  tag_24\n    /* \"#utility.yul\":1148:1153   */\n  dup3\n    /* \"#utility.yul\":1130:1154   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":1119:1154   */\n  swap1\n  pop\n    /* \"#utility.yul\":1109:1160   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1166:1292   */\ntag_25:\n  0x00\n    /* \"#utility.yul\":1243:1285   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1236:1241   */\n  dup3\n    /* \"#utility.yul\":1232:1286   */\n  and\n    /* \"#utility.yul\":1221:1286   */\n  swap1\n  pop\n    /* \"#utility.yul\":1211:1292   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1298:1375   */\ntag_27:\n  0x00\n    /* \"#utility.yul\":1364:1369   */\n  dup2\n    /* \"#utility.yul\":1353:1369   */\n  swap1\n  pop\n    /* \"#utility.yul\":1343:1375   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1381:1503   */\ntag_11:\n    /* \"#utility.yul\":1454:1478   */\n  tag_30\n    /* \"#utility.yul\":1472:1477   */\n  dup2\n    /* \"#utility.yul\":1454:1478   */\n  tag_22\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1447:1452   */\n  dup2\n    /* \"#utility.yul\":1444:1479   */\n  eq\n    /* \"#utility.yul\":1434:1436   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1493:1494   */\n  0x00\n    /* \"#utility.yul\":1490:1491   */\n  dup1\n    /* \"#utility.yul\":1483:1495   */\n  revert\n    /* \"#utility.yul\":1434:1436   */\ntag_31:\n    /* \"#utility.yul\":1424:1503   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1509:1631   */\ntag_15:\n    /* \"#utility.yul\":1582:1606   */\n  tag_33\n    /* \"#utility.yul\":1600:1605   */\n  dup2\n    /* \"#utility.yul\":1582:1606   */\n  tag_27\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1575:1580   */\n  dup2\n    /* \"#utility.yul\":1572:1607   */\n  eq\n    /* \"#utility.yul\":1562:1564   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1618:1619   */\n  dup1\n    /* \"#utility.yul\":1611:1623   */\n  revert\n    /* \"#utility.yul\":1562:1564   */\ntag_34:\n    /* \"#utility.yul\":1552:1631   */\n  pop\n  jump\t// out\n    /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2362:5549  contract NFTStakingPerToken is Context, IERC721Receiver {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2362:5549  contract NFTStakingPerToken is Context, IERC721Receiver {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x47ccca02\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xbe040fb0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfb75b2c7\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x10098ad5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2ce9aead\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2d6a1fa6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3671:3980  function available(address account) public view returns (uint256) {\r... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5238:5546  function  onERC721Received(\r... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2666:2715  mapping(address => uint256) public lastUpdateTime */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2516:2551  uint256 public rewardPerTokenPerDay */\n    tag_6:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4308:4602  function withdraw(uint256 tokenId) external update(_msgSender()) {\r... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2425:2443  IERC721 public nft */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2615:2659  mapping(address => uint256) public balanceOf */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4076:4194  function stake(uint256 tokenId) external {\r... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4677:5227  function redeem() external update(_msgSender()) {\r... */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2450:2475  IERC20 public rewardToken */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2482:2509  address public rewardWallet */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3671:3980  function available(address account) public view returns (uint256) {\r... */\n    tag_18:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3728:3735  uint256 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3748:3767  uint256 timeElapsed */\n      dup1\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3788:3802  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3788:3811  lastUpdateTime[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3803:3810  account */\n      dup5\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3788:3811  lastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3770:3785  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3770:3811  block.timestamp - lastUpdateTime[account] */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3748:3811  uint256 timeElapsed = block.timestamp - lastUpdateTime[account] */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3822:3836  uint256 earned */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3925:3930  86400 */\n      0x015180\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3901:3921  rewardPerTokenPerDay */\n      sload(0x03)\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3874:3885  timeElapsed */\n      dup4\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3840:3849  balanceOf */\n      0x05\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3840:3858  balanceOf[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3850:3857  account */\n      dup9\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3840:3858  balanceOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3840:3885  balanceOf[account] *\r... */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3840:3921  balanceOf[account] *\r... */\n      tag_64\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3839:3930  (balanceOf[account] *\r... */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3822:3930  uint256 earned = (balanceOf[account] *\r... */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3966:3972  earned */\n      dup1\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3948:3954  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3948:3963  reward[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3955:3962  account */\n      dup7\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3948:3963  reward[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3948:3972  reward[account] + earned */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3941:3972  return reward[account] + earned */\n      swap3\n      pop\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3671:3980  function available(address account) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5238:5546  function  onERC721Received(\r... */\n    tag_24:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5404:5410  bytes4 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5389:5393  from */\n      dup5\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3450:3468  available(account) */\n      tag_70\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3460:3467  account */\n      dup2\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3450:3459  available */\n      tag_18\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3450:3468  available(account) */\n      jump\t// in\n    tag_70:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3438  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3447  reward[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3439:3446  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3447  reward[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3468  reward[account] = available(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3505:3520  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3493  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3502  lastUpdateTime[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3494:3501  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3502  lastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3520  lastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5447:5451  from */\n      dup6\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5423:5435  stakedTokens */\n      0x04\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5423:5444  stakedTokens[tokenId] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5436:5443  tokenId */\n      dup8\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5423:5444  stakedTokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5423:5451  stakedTokens[tokenId] = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5462:5471  balanceOf */\n      0x05\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5462:5477  balanceOf[from] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5472:5476  from */\n      dup8\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5462:5477  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5462:5479  balanceOf[from]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5497:5538  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5490:5538  return IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5238:5546  function  onERC721Received(\r... */\n      pop\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2666:2715  mapping(address => uint256) public lastUpdateTime */\n    tag_29:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2516:2551  uint256 public rewardPerTokenPerDay */\n    tag_32:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4308:4602  function withdraw(uint256 tokenId) external update(_msgSender()) {\r... */\n    tag_37:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4359:4371  _msgSender() */\n      tag_74\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4359:4369  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4359:4371  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3450:3468  available(account) */\n      tag_77\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3460:3467  account */\n      dup2\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3450:3459  available */\n      tag_18\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3450:3468  available(account) */\n      jump\t// in\n    tag_77:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3438  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3447  reward[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3439:3446  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3447  reward[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3468  reward[account] = available(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3505:3520  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3493  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3502  lastUpdateTime[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3494:3501  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3502  lastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3520  lastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4417:4429  _msgSender() */\n      tag_79\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4417:4427  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4417:4429  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4392:4429  stakedTokens[tokenId] == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4392:4404  stakedTokens */\n      0x04\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4392:4413  stakedTokens[tokenId] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4405:4412  tokenId */\n      dup5\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4392:4413  stakedTokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4392:4429  stakedTokens[tokenId] == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4384:4454  require(stakedTokens[tokenId] == _msgSender(), \"Token is not staked.\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4472:4484  stakedTokens */\n      0x04\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4472:4493  stakedTokens[tokenId] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4485:4492  tokenId */\n      dup4\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4472:4493  stakedTokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4465:4493  delete stakedTokens[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4504:4513  balanceOf */\n      0x05\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4504:4527  balanceOf[_msgSender()] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4514:4526  _msgSender() */\n      tag_83\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4514:4524  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4514:4526  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4504:4527  balanceOf[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4504:4529  balanceOf[_msgSender()]-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4540:4543  nft */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4540:4556  nft.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4565:4569  this */\n      address\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4572:4584  _msgSender() */\n      tag_86\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4572:4582  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4572:4584  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4586:4593  tokenId */\n      dup6\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4540:4594  nft.transferFrom(address(this), _msgSender(), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4308:4602  function withdraw(uint256 tokenId) external update(_msgSender()) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2425:2443  IERC721 public nft */\n    tag_39:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2615:2659  mapping(address => uint256) public balanceOf */\n    tag_44:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4076:4194  function stake(uint256 tokenId) external {\r... */\n    tag_48:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4128:4131  nft */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4128:4148  nft.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4149:4161  _msgSender() */\n      tag_93\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4149:4159  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4149:4161  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4171:4175  this */\n      address\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4178:4185  tokenId */\n      dup5\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4128:4186  nft.safeTransferFrom(_msgSender(), address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_94:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4076:4194  function stake(uint256 tokenId) external {\r... */\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4677:5227  function redeem() external update(_msgSender()) {\r... */\n    tag_50:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4711:4723  _msgSender() */\n      tag_98\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4711:4721  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4711:4723  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3450:3468  available(account) */\n      tag_100\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3460:3467  account */\n      dup2\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3450:3459  available */\n      tag_18\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3450:3468  available(account) */\n      jump\t// in\n    tag_100:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3438  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3447  reward[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3439:3446  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3447  reward[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3432:3468  reward[account] = available(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3505:3520  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3493  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3502  lastUpdateTime[account] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3494:3501  account */\n      dup4\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3502  lastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3479:3520  lastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4732:4746  uint256 amount */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4749:4755  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4749:4769  reward[_msgSender()] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4756:4768  _msgSender() */\n      tag_102\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4756:4766  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4756:4768  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4749:4769  reward[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4732:4769  uint256 amount = reward[_msgSender()] */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4793:4794  0 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4784:4790  amount */\n      dup2\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4784:4794  amount > 0 */\n      gt\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4776:4816  require(amount > 0, \"Nothing to redeem\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4846:4847  0 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4823:4829  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4823:4843  reward[_msgSender()] */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4830:4842  _msgSender() */\n      tag_106\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4830:4840  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4830:4842  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4823:4843  reward[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4823:4847  reward[_msgSender()] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4856:4873  uint256 allowance */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4876:4887  rewardToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4876:4897  rewardToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4898:4910  rewardWallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4920:4924  this */\n      address\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4876:4926  rewardToken.allowance(rewardWallet, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4856:4926  uint256 allowance = rewardToken.allowance(rewardWallet, address(this)) */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4933:4960  uint256 rewardWalletBalance */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4963:4974  rewardToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4963:4984  rewardToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4985:4997  rewardWallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4963:4998  rewardToken.balanceOf(rewardWallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_114:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_118:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4933:4998  uint256 rewardWalletBalance = rewardToken.balanceOf(rewardWallet) */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5026:5032  amount */\n      dup3\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5013:5022  allowance */\n      dup3\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5013:5032  allowance >= amount */\n      lt\n      iszero\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5005:5072  require(allowance >= amount, \"Check the reward wallet's allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5110:5116  amount */\n      dup3\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5087:5106  rewardWalletBalance */\n      dup2\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5087:5116  rewardWalletBalance >= amount */\n      lt\n      iszero\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5079:5154  require(rewardWalletBalance >= amount, \"Check the reward wallet's balance\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5163:5174  rewardToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5163:5187  rewardToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5188:5200  rewardWallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5202:5214  _msgSender() */\n      tag_125\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5202:5212  _msgSender */\n      tag_75\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5202:5214  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5216:5222  amount */\n      dup7\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":5163:5223  rewardToken.transferFrom(rewardWallet, _msgSender(), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_126:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":3531:3532  _ */\n      pop\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":4677:5227  function redeem() external update(_msgSender()) {\r... */\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2450:2475  IERC20 public rewardToken */\n    tag_52:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":2482:2509  address public rewardWallet */\n    tag_56:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":1912:2008  function _msgSender() internal view virtual returns (address) {... */\n    tag_75:\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":1965:1972  address */\n      0x00\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":1991:2001  msg.sender */\n      caller\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":1984:2001  return msg.sender */\n      swap1\n      pop\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":1912:2008  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_134:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_136\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_138:\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_140\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":308:659   */\n    tag_142:\n      0x00\n      dup1\n        /* \"#utility.yul\":425:428   */\n      dup4\n        /* \"#utility.yul\":418:422   */\n      0x1f\n        /* \"#utility.yul\":410:416   */\n      dup5\n        /* \"#utility.yul\":406:423   */\n      add\n        /* \"#utility.yul\":402:429   */\n      slt\n        /* \"#utility.yul\":392:394   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":392:394   */\n    tag_144:\n        /* \"#utility.yul\":479:485   */\n      dup3\n        /* \"#utility.yul\":466:486   */\n      calldataload\n        /* \"#utility.yul\":456:486   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:527   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":501:507   */\n      dup2\n        /* \"#utility.yul\":498:528   */\n      gt\n        /* \"#utility.yul\":495:497   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":541:542   */\n      0x00\n        /* \"#utility.yul\":538:539   */\n      dup1\n        /* \"#utility.yul\":531:543   */\n      revert\n        /* \"#utility.yul\":495:497   */\n    tag_145:\n        /* \"#utility.yul\":578:582   */\n      0x20\n        /* \"#utility.yul\":570:576   */\n      dup4\n        /* \"#utility.yul\":566:583   */\n      add\n        /* \"#utility.yul\":554:583   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:635   */\n      dup4\n        /* \"#utility.yul\":624:628   */\n      0x01\n        /* \"#utility.yul\":616:622   */\n      dup3\n        /* \"#utility.yul\":612:629   */\n      mul\n        /* \"#utility.yul\":602:610   */\n      dup4\n        /* \"#utility.yul\":598:630   */\n      add\n        /* \"#utility.yul\":595:636   */\n      gt\n        /* \"#utility.yul\":592:594   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":649:650   */\n      0x00\n        /* \"#utility.yul\":646:647   */\n      dup1\n        /* \"#utility.yul\":639:651   */\n      revert\n        /* \"#utility.yul\":592:594   */\n    tag_146:\n        /* \"#utility.yul\":382:659   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":665:804   */\n    tag_147:\n      0x00\n        /* \"#utility.yul\":749:755   */\n      dup2\n        /* \"#utility.yul\":736:756   */\n      calldataload\n        /* \"#utility.yul\":727:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":765:798   */\n      tag_149\n        /* \"#utility.yul\":792:797   */\n      dup2\n        /* \"#utility.yul\":765:798   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":717:804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":810:953   */\n    tag_151:\n      0x00\n        /* \"#utility.yul\":898:904   */\n      dup2\n        /* \"#utility.yul\":892:905   */\n      mload\n        /* \"#utility.yul\":883:905   */\n      swap1\n      pop\n        /* \"#utility.yul\":914:947   */\n      tag_153\n        /* \"#utility.yul\":941:946   */\n      dup2\n        /* \"#utility.yul\":914:947   */\n      tag_150\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":873:953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":959:1221   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":1067:1069   */\n      0x20\n        /* \"#utility.yul\":1055:1064   */\n      dup3\n        /* \"#utility.yul\":1046:1053   */\n      dup5\n        /* \"#utility.yul\":1042:1065   */\n      sub\n        /* \"#utility.yul\":1038:1070   */\n      slt\n        /* \"#utility.yul\":1035:1037   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1083:1084   */\n      0x00\n        /* \"#utility.yul\":1080:1081   */\n      dup1\n        /* \"#utility.yul\":1073:1085   */\n      revert\n        /* \"#utility.yul\":1035:1037   */\n    tag_155:\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1151:1204   */\n      tag_156\n        /* \"#utility.yul\":1196:1203   */\n      dup5\n        /* \"#utility.yul\":1187:1193   */\n      dup3\n        /* \"#utility.yul\":1176:1185   */\n      dup6\n        /* \"#utility.yul\":1172:1194   */\n      add\n        /* \"#utility.yul\":1151:1204   */\n      tag_134\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1141:1204   */\n      swap2\n      pop\n        /* \"#utility.yul\":1097:1214   */\n      pop\n        /* \"#utility.yul\":1025:1221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1227:2056   */\n    tag_23:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1405:1408   */\n      0x80\n        /* \"#utility.yul\":1393:1402   */\n      dup7\n        /* \"#utility.yul\":1384:1391   */\n      dup9\n        /* \"#utility.yul\":1380:1403   */\n      sub\n        /* \"#utility.yul\":1376:1409   */\n      slt\n        /* \"#utility.yul\":1373:1375   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1419:1420   */\n      dup1\n        /* \"#utility.yul\":1412:1424   */\n      revert\n        /* \"#utility.yul\":1373:1375   */\n    tag_158:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_159\n        /* \"#utility.yul\":1535:1542   */\n      dup9\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup10\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_134\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1480:1543   */\n      swap6\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_160\n        /* \"#utility.yul\":1663:1670   */\n      dup9\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup10\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_134\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1608:1671   */\n      swap5\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_161\n        /* \"#utility.yul\":1791:1798   */\n      dup9\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup10\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_147\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1736:1799   */\n      swap4\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1876:1878   */\n      0x60\n        /* \"#utility.yul\":1865:1874   */\n      dup7\n        /* \"#utility.yul\":1861:1879   */\n      add\n        /* \"#utility.yul\":1848:1880   */\n      calldataload\n        /* \"#utility.yul\":1907:1925   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1899:1905   */\n      dup2\n        /* \"#utility.yul\":1896:1926   */\n      gt\n        /* \"#utility.yul\":1893:1895   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1936:1937   */\n      dup1\n        /* \"#utility.yul\":1929:1941   */\n      revert\n        /* \"#utility.yul\":1893:1895   */\n    tag_162:\n        /* \"#utility.yul\":1975:2039   */\n      tag_163\n        /* \"#utility.yul\":2031:2038   */\n      dup9\n        /* \"#utility.yul\":2022:2028   */\n      dup3\n        /* \"#utility.yul\":2011:2020   */\n      dup10\n        /* \"#utility.yul\":2007:2029   */\n      add\n        /* \"#utility.yul\":1975:2039   */\n      tag_142\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1957:2039   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1819:2049   */\n      pop\n        /* \"#utility.yul\":1363:2056   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2062:2340   */\n    tag_131:\n      0x00\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2166:2175   */\n      dup3\n        /* \"#utility.yul\":2157:2164   */\n      dup5\n        /* \"#utility.yul\":2153:2176   */\n      sub\n        /* \"#utility.yul\":2149:2181   */\n      slt\n        /* \"#utility.yul\":2146:2148   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2194:2195   */\n      0x00\n        /* \"#utility.yul\":2191:2192   */\n      dup1\n        /* \"#utility.yul\":2184:2196   */\n      revert\n        /* \"#utility.yul\":2146:2148   */\n    tag_165:\n        /* \"#utility.yul\":2237:2238   */\n      0x00\n        /* \"#utility.yul\":2262:2323   */\n      tag_166\n        /* \"#utility.yul\":2315:2322   */\n      dup5\n        /* \"#utility.yul\":2306:2312   */\n      dup3\n        /* \"#utility.yul\":2295:2304   */\n      dup6\n        /* \"#utility.yul\":2291:2313   */\n      add\n        /* \"#utility.yul\":2262:2323   */\n      tag_138\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2252:2323   */\n      swap2\n      pop\n        /* \"#utility.yul\":2208:2333   */\n      pop\n        /* \"#utility.yul\":2136:2340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2346:2608   */\n    tag_36:\n      0x00\n        /* \"#utility.yul\":2454:2456   */\n      0x20\n        /* \"#utility.yul\":2442:2451   */\n      dup3\n        /* \"#utility.yul\":2433:2440   */\n      dup5\n        /* \"#utility.yul\":2429:2452   */\n      sub\n        /* \"#utility.yul\":2425:2457   */\n      slt\n        /* \"#utility.yul\":2422:2424   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2467:2468   */\n      dup1\n        /* \"#utility.yul\":2460:2472   */\n      revert\n        /* \"#utility.yul\":2422:2424   */\n    tag_168:\n        /* \"#utility.yul\":2513:2514   */\n      0x00\n        /* \"#utility.yul\":2538:2591   */\n      tag_169\n        /* \"#utility.yul\":2583:2590   */\n      dup5\n        /* \"#utility.yul\":2574:2580   */\n      dup3\n        /* \"#utility.yul\":2563:2572   */\n      dup6\n        /* \"#utility.yul\":2559:2581   */\n      add\n        /* \"#utility.yul\":2538:2591   */\n      tag_147\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2528:2591   */\n      swap2\n      pop\n        /* \"#utility.yul\":2484:2601   */\n      pop\n        /* \"#utility.yul\":2412:2608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2614:2898   */\n    tag_113:\n      0x00\n        /* \"#utility.yul\":2733:2735   */\n      0x20\n        /* \"#utility.yul\":2721:2730   */\n      dup3\n        /* \"#utility.yul\":2712:2719   */\n      dup5\n        /* \"#utility.yul\":2708:2731   */\n      sub\n        /* \"#utility.yul\":2704:2736   */\n      slt\n        /* \"#utility.yul\":2701:2703   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2749:2750   */\n      0x00\n        /* \"#utility.yul\":2746:2747   */\n      dup1\n        /* \"#utility.yul\":2739:2751   */\n      revert\n        /* \"#utility.yul\":2701:2703   */\n    tag_171:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2881   */\n      tag_172\n        /* \"#utility.yul\":2873:2880   */\n      dup5\n        /* \"#utility.yul\":2864:2870   */\n      dup3\n        /* \"#utility.yul\":2853:2862   */\n      dup6\n        /* \"#utility.yul\":2849:2871   */\n      add\n        /* \"#utility.yul\":2817:2881   */\n      tag_151\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2807:2881   */\n      swap2\n      pop\n        /* \"#utility.yul\":2763:2891   */\n      pop\n        /* \"#utility.yul\":2691:2898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2904:3022   */\n    tag_173:\n        /* \"#utility.yul\":2991:3015   */\n      tag_175\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":2991:3015   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2986:2989   */\n      dup3\n        /* \"#utility.yul\":2979:3016   */\n      mstore\n        /* \"#utility.yul\":2969:3022   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3028:3143   */\n    tag_177:\n        /* \"#utility.yul\":3113:3136   */\n      tag_179\n        /* \"#utility.yul\":3130:3135   */\n      dup2\n        /* \"#utility.yul\":3113:3136   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3108:3111   */\n      dup3\n        /* \"#utility.yul\":3101:3137   */\n      mstore\n        /* \"#utility.yul\":3091:3143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3306   */\n    tag_181:\n        /* \"#utility.yul\":3249:3299   */\n      tag_183\n        /* \"#utility.yul\":3293:3298   */\n      dup2\n        /* \"#utility.yul\":3249:3299   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3244:3247   */\n      dup3\n        /* \"#utility.yul\":3237:3300   */\n      mstore\n        /* \"#utility.yul\":3227:3306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3312:3473   */\n    tag_185:\n        /* \"#utility.yul\":3414:3466   */\n      tag_187\n        /* \"#utility.yul\":3460:3465   */\n      dup2\n        /* \"#utility.yul\":3414:3466   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3409:3412   */\n      dup3\n        /* \"#utility.yul\":3402:3467   */\n      mstore\n        /* \"#utility.yul\":3392:3473   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3479:3794   */\n    tag_189:\n      0x00\n        /* \"#utility.yul\":3642:3709   */\n      tag_191\n        /* \"#utility.yul\":3706:3708   */\n      0x11\n        /* \"#utility.yul\":3701:3704   */\n      dup4\n        /* \"#utility.yul\":3642:3709   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3635:3709   */\n      swap2\n      pop\n        /* \"#utility.yul\":3739:3758   */\n      0x4e6f7468696e6720746f2072656465656d000000000000000000000000000000\n        /* \"#utility.yul\":3735:3736   */\n      0x00\n        /* \"#utility.yul\":3730:3733   */\n      dup4\n        /* \"#utility.yul\":3726:3737   */\n      add\n        /* \"#utility.yul\":3719:3759   */\n      mstore\n        /* \"#utility.yul\":3785:3787   */\n      0x20\n        /* \"#utility.yul\":3780:3783   */\n      dup3\n        /* \"#utility.yul\":3776:3788   */\n      add\n        /* \"#utility.yul\":3769:3788   */\n      swap1\n      pop\n        /* \"#utility.yul\":3625:3794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4118   */\n    tag_193:\n      0x00\n        /* \"#utility.yul\":3963:4030   */\n      tag_195\n        /* \"#utility.yul\":4027:4029   */\n      0x14\n        /* \"#utility.yul\":4022:4025   */\n      dup4\n        /* \"#utility.yul\":3963:4030   */\n      tag_192\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3956:4030   */\n      swap2\n      pop\n        /* \"#utility.yul\":4060:4082   */\n      0x546f6b656e206973206e6f74207374616b65642e000000000000000000000000\n        /* \"#utility.yul\":4056:4057   */\n      0x00\n        /* \"#utility.yul\":4051:4054   */\n      dup4\n        /* \"#utility.yul\":4047:4058   */\n      add\n        /* \"#utility.yul\":4040:4083   */\n      mstore\n        /* \"#utility.yul\":4109:4111   */\n      0x20\n        /* \"#utility.yul\":4104:4107   */\n      dup3\n        /* \"#utility.yul\":4100:4112   */\n      add\n        /* \"#utility.yul\":4093:4112   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4124:4489   */\n    tag_196:\n      0x00\n        /* \"#utility.yul\":4287:4354   */\n      tag_198\n        /* \"#utility.yul\":4351:4353   */\n      0x21\n        /* \"#utility.yul\":4346:4349   */\n      dup4\n        /* \"#utility.yul\":4287:4354   */\n      tag_192\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4280:4354   */\n      swap2\n      pop\n        /* \"#utility.yul\":4384:4418   */\n      0x436865636b20746865207265776172642077616c6c657427732062616c616e63\n        /* \"#utility.yul\":4380:4381   */\n      0x00\n        /* \"#utility.yul\":4375:4378   */\n      dup4\n        /* \"#utility.yul\":4371:4382   */\n      add\n        /* \"#utility.yul\":4364:4419   */\n      mstore\n        /* \"#utility.yul\":4450:4453   */\n      0x6500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4445:4447   */\n      0x20\n        /* \"#utility.yul\":4440:4443   */\n      dup4\n        /* \"#utility.yul\":4436:4448   */\n      add\n        /* \"#utility.yul\":4429:4454   */\n      mstore\n        /* \"#utility.yul\":4480:4482   */\n      0x40\n        /* \"#utility.yul\":4475:4478   */\n      dup3\n        /* \"#utility.yul\":4471:4483   */\n      add\n        /* \"#utility.yul\":4464:4483   */\n      swap1\n      pop\n        /* \"#utility.yul\":4270:4489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4495:4862   */\n    tag_199:\n      0x00\n        /* \"#utility.yul\":4658:4725   */\n      tag_201\n        /* \"#utility.yul\":4722:4724   */\n      0x23\n        /* \"#utility.yul\":4717:4720   */\n      dup4\n        /* \"#utility.yul\":4658:4725   */\n      tag_192\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4651:4725   */\n      swap2\n      pop\n        /* \"#utility.yul\":4755:4789   */\n      0x436865636b20746865207265776172642077616c6c6574277320616c6c6f7761\n        /* \"#utility.yul\":4751:4752   */\n      0x00\n        /* \"#utility.yul\":4746:4749   */\n      dup4\n        /* \"#utility.yul\":4742:4753   */\n      add\n        /* \"#utility.yul\":4735:4790   */\n      mstore\n        /* \"#utility.yul\":4821:4826   */\n      0x6e63650000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4816:4818   */\n      0x20\n        /* \"#utility.yul\":4811:4814   */\n      dup4\n        /* \"#utility.yul\":4807:4819   */\n      add\n        /* \"#utility.yul\":4800:4827   */\n      mstore\n        /* \"#utility.yul\":4853:4855   */\n      0x40\n        /* \"#utility.yul\":4848:4851   */\n      dup3\n        /* \"#utility.yul\":4844:4856   */\n      add\n        /* \"#utility.yul\":4837:4856   */\n      swap1\n      pop\n        /* \"#utility.yul\":4641:4862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4868:4986   */\n    tag_202:\n        /* \"#utility.yul\":4955:4979   */\n      tag_204\n        /* \"#utility.yul\":4973:4978   */\n      dup2\n        /* \"#utility.yul\":4955:4979   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4950:4953   */\n      dup3\n        /* \"#utility.yul\":4943:4980   */\n      mstore\n        /* \"#utility.yul\":4933:4986   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4992:5214   */\n    tag_58:\n      0x00\n        /* \"#utility.yul\":5123:5125   */\n      0x20\n        /* \"#utility.yul\":5112:5121   */\n      dup3\n        /* \"#utility.yul\":5108:5126   */\n      add\n        /* \"#utility.yul\":5100:5126   */\n      swap1\n      pop\n        /* \"#utility.yul\":5136:5207   */\n      tag_207\n        /* \"#utility.yul\":5204:5205   */\n      0x00\n        /* \"#utility.yul\":5193:5202   */\n      dup4\n        /* \"#utility.yul\":5189:5206   */\n      add\n        /* \"#utility.yul\":5180:5186   */\n      dup5\n        /* \"#utility.yul\":5136:5207   */\n      tag_173\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5090:5214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5220:5552   */\n    tag_108:\n      0x00\n        /* \"#utility.yul\":5379:5381   */\n      0x40\n        /* \"#utility.yul\":5368:5377   */\n      dup3\n        /* \"#utility.yul\":5364:5382   */\n      add\n        /* \"#utility.yul\":5356:5382   */\n      swap1\n      pop\n        /* \"#utility.yul\":5392:5463   */\n      tag_209\n        /* \"#utility.yul\":5460:5461   */\n      0x00\n        /* \"#utility.yul\":5449:5458   */\n      dup4\n        /* \"#utility.yul\":5445:5462   */\n      add\n        /* \"#utility.yul\":5436:5442   */\n      dup6\n        /* \"#utility.yul\":5392:5463   */\n      tag_173\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5473:5545   */\n      tag_210\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5530:5539   */\n      dup4\n        /* \"#utility.yul\":5526:5544   */\n      add\n        /* \"#utility.yul\":5517:5523   */\n      dup5\n        /* \"#utility.yul\":5473:5545   */\n      tag_173\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5346:5552   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5558:6000   */\n    tag_88:\n      0x00\n        /* \"#utility.yul\":5745:5747   */\n      0x60\n        /* \"#utility.yul\":5734:5743   */\n      dup3\n        /* \"#utility.yul\":5730:5748   */\n      add\n        /* \"#utility.yul\":5722:5748   */\n      swap1\n      pop\n        /* \"#utility.yul\":5758:5829   */\n      tag_212\n        /* \"#utility.yul\":5826:5827   */\n      0x00\n        /* \"#utility.yul\":5815:5824   */\n      dup4\n        /* \"#utility.yul\":5811:5828   */\n      add\n        /* \"#utility.yul\":5802:5808   */\n      dup7\n        /* \"#utility.yul\":5758:5829   */\n      tag_173\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5839:5911   */\n      tag_213\n        /* \"#utility.yul\":5907:5909   */\n      0x20\n        /* \"#utility.yul\":5896:5905   */\n      dup4\n        /* \"#utility.yul\":5892:5910   */\n      add\n        /* \"#utility.yul\":5883:5889   */\n      dup6\n        /* \"#utility.yul\":5839:5911   */\n      tag_173\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5921:5993   */\n      tag_214\n        /* \"#utility.yul\":5989:5991   */\n      0x40\n        /* \"#utility.yul\":5978:5987   */\n      dup4\n        /* \"#utility.yul\":5974:5992   */\n      add\n        /* \"#utility.yul\":5965:5971   */\n      dup5\n        /* \"#utility.yul\":5921:5993   */\n      tag_202\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5712:6000   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6006:6224   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":6135:6137   */\n      0x20\n        /* \"#utility.yul\":6124:6133   */\n      dup3\n        /* \"#utility.yul\":6120:6138   */\n      add\n        /* \"#utility.yul\":6112:6138   */\n      swap1\n      pop\n        /* \"#utility.yul\":6148:6217   */\n      tag_216\n        /* \"#utility.yul\":6214:6215   */\n      0x00\n        /* \"#utility.yul\":6203:6212   */\n      dup4\n        /* \"#utility.yul\":6199:6216   */\n      add\n        /* \"#utility.yul\":6190:6196   */\n      dup5\n        /* \"#utility.yul\":6148:6217   */\n      tag_177\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6102:6224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6230:6478   */\n    tag_54:\n      0x00\n        /* \"#utility.yul\":6374:6376   */\n      0x20\n        /* \"#utility.yul\":6363:6372   */\n      dup3\n        /* \"#utility.yul\":6359:6377   */\n      add\n        /* \"#utility.yul\":6351:6377   */\n      swap1\n      pop\n        /* \"#utility.yul\":6387:6471   */\n      tag_218\n        /* \"#utility.yul\":6468:6469   */\n      0x00\n        /* \"#utility.yul\":6457:6466   */\n      dup4\n        /* \"#utility.yul\":6453:6470   */\n      add\n        /* \"#utility.yul\":6444:6450   */\n      dup5\n        /* \"#utility.yul\":6387:6471   */\n      tag_181\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6341:6478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6484:6736   */\n    tag_41:\n      0x00\n        /* \"#utility.yul\":6630:6632   */\n      0x20\n        /* \"#utility.yul\":6619:6628   */\n      dup3\n        /* \"#utility.yul\":6615:6633   */\n      add\n        /* \"#utility.yul\":6607:6633   */\n      swap1\n      pop\n        /* \"#utility.yul\":6643:6729   */\n      tag_220\n        /* \"#utility.yul\":6726:6727   */\n      0x00\n        /* \"#utility.yul\":6715:6724   */\n      dup4\n        /* \"#utility.yul\":6711:6728   */\n      add\n        /* \"#utility.yul\":6702:6708   */\n      dup5\n        /* \"#utility.yul\":6643:6729   */\n      tag_185\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6597:6736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6742:7161   */\n    tag_105:\n      0x00\n        /* \"#utility.yul\":6946:6948   */\n      0x20\n        /* \"#utility.yul\":6935:6944   */\n      dup3\n        /* \"#utility.yul\":6931:6949   */\n      add\n        /* \"#utility.yul\":6923:6949   */\n      swap1\n      pop\n        /* \"#utility.yul\":6995:7004   */\n      dup2\n        /* \"#utility.yul\":6989:6993   */\n      dup2\n        /* \"#utility.yul\":6985:7005   */\n      sub\n        /* \"#utility.yul\":6981:6982   */\n      0x00\n        /* \"#utility.yul\":6970:6979   */\n      dup4\n        /* \"#utility.yul\":6966:6983   */\n      add\n        /* \"#utility.yul\":6959:7006   */\n      mstore\n        /* \"#utility.yul\":7023:7154   */\n      tag_222\n        /* \"#utility.yul\":7149:7153   */\n      dup2\n        /* \"#utility.yul\":7023:7154   */\n      tag_189\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7015:7154   */\n      swap1\n      pop\n        /* \"#utility.yul\":6913:7161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7167:7586   */\n    tag_82:\n      0x00\n        /* \"#utility.yul\":7371:7373   */\n      0x20\n        /* \"#utility.yul\":7360:7369   */\n      dup3\n        /* \"#utility.yul\":7356:7374   */\n      add\n        /* \"#utility.yul\":7348:7374   */\n      swap1\n      pop\n        /* \"#utility.yul\":7420:7429   */\n      dup2\n        /* \"#utility.yul\":7414:7418   */\n      dup2\n        /* \"#utility.yul\":7410:7430   */\n      sub\n        /* \"#utility.yul\":7406:7407   */\n      0x00\n        /* \"#utility.yul\":7395:7404   */\n      dup4\n        /* \"#utility.yul\":7391:7408   */\n      add\n        /* \"#utility.yul\":7384:7431   */\n      mstore\n        /* \"#utility.yul\":7448:7579   */\n      tag_224\n        /* \"#utility.yul\":7574:7578   */\n      dup2\n        /* \"#utility.yul\":7448:7579   */\n      tag_193\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7440:7579   */\n      swap1\n      pop\n        /* \"#utility.yul\":7338:7586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7592:8011   */\n    tag_124:\n      0x00\n        /* \"#utility.yul\":7796:7798   */\n      0x20\n        /* \"#utility.yul\":7785:7794   */\n      dup3\n        /* \"#utility.yul\":7781:7799   */\n      add\n        /* \"#utility.yul\":7773:7799   */\n      swap1\n      pop\n        /* \"#utility.yul\":7845:7854   */\n      dup2\n        /* \"#utility.yul\":7839:7843   */\n      dup2\n        /* \"#utility.yul\":7835:7855   */\n      sub\n        /* \"#utility.yul\":7831:7832   */\n      0x00\n        /* \"#utility.yul\":7820:7829   */\n      dup4\n        /* \"#utility.yul\":7816:7833   */\n      add\n        /* \"#utility.yul\":7809:7856   */\n      mstore\n        /* \"#utility.yul\":7873:8004   */\n      tag_226\n        /* \"#utility.yul\":7999:8003   */\n      dup2\n        /* \"#utility.yul\":7873:8004   */\n      tag_196\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7865:8004   */\n      swap1\n      pop\n        /* \"#utility.yul\":7763:8011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8017:8436   */\n    tag_121:\n      0x00\n        /* \"#utility.yul\":8221:8223   */\n      0x20\n        /* \"#utility.yul\":8210:8219   */\n      dup3\n        /* \"#utility.yul\":8206:8224   */\n      add\n        /* \"#utility.yul\":8198:8224   */\n      swap1\n      pop\n        /* \"#utility.yul\":8270:8279   */\n      dup2\n        /* \"#utility.yul\":8264:8268   */\n      dup2\n        /* \"#utility.yul\":8260:8280   */\n      sub\n        /* \"#utility.yul\":8256:8257   */\n      0x00\n        /* \"#utility.yul\":8245:8254   */\n      dup4\n        /* \"#utility.yul\":8241:8258   */\n      add\n        /* \"#utility.yul\":8234:8281   */\n      mstore\n        /* \"#utility.yul\":8298:8429   */\n      tag_228\n        /* \"#utility.yul\":8424:8428   */\n      dup2\n        /* \"#utility.yul\":8298:8429   */\n      tag_199\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":8290:8429   */\n      swap1\n      pop\n        /* \"#utility.yul\":8188:8436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8442:8664   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":8573:8575   */\n      0x20\n        /* \"#utility.yul\":8562:8571   */\n      dup3\n        /* \"#utility.yul\":8558:8576   */\n      add\n        /* \"#utility.yul\":8550:8576   */\n      swap1\n      pop\n        /* \"#utility.yul\":8586:8657   */\n      tag_230\n        /* \"#utility.yul\":8654:8655   */\n      0x00\n        /* \"#utility.yul\":8643:8652   */\n      dup4\n        /* \"#utility.yul\":8639:8656   */\n      add\n        /* \"#utility.yul\":8630:8636   */\n      dup5\n        /* \"#utility.yul\":8586:8657   */\n      tag_202\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":8540:8664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8670:8839   */\n    tag_192:\n      0x00\n        /* \"#utility.yul\":8788:8794   */\n      dup3\n        /* \"#utility.yul\":8783:8786   */\n      dup3\n        /* \"#utility.yul\":8776:8795   */\n      mstore\n        /* \"#utility.yul\":8828:8832   */\n      0x20\n        /* \"#utility.yul\":8823:8826   */\n      dup3\n        /* \"#utility.yul\":8819:8833   */\n      add\n        /* \"#utility.yul\":8804:8833   */\n      swap1\n      pop\n        /* \"#utility.yul\":8766:8839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8845:9150   */\n    tag_68:\n      0x00\n        /* \"#utility.yul\":8904:8924   */\n      tag_233\n        /* \"#utility.yul\":8922:8923   */\n      dup3\n        /* \"#utility.yul\":8904:8924   */\n      tag_205\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":8899:8924   */\n      swap2\n      pop\n        /* \"#utility.yul\":8938:8958   */\n      tag_234\n        /* \"#utility.yul\":8956:8957   */\n      dup4\n        /* \"#utility.yul\":8938:8958   */\n      tag_205\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8933:8958   */\n      swap3\n      pop\n        /* \"#utility.yul\":9092:9093   */\n      dup3\n        /* \"#utility.yul\":9024:9090   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9020:9094   */\n      sub\n        /* \"#utility.yul\":9017:9018   */\n      dup3\n        /* \"#utility.yul\":9014:9095   */\n      gt\n        /* \"#utility.yul\":9011:9013   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":9098:9116   */\n      tag_236\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":9011:9013   */\n    tag_235:\n        /* \"#utility.yul\":9142:9143   */\n      dup3\n        /* \"#utility.yul\":9139:9140   */\n      dup3\n        /* \"#utility.yul\":9135:9144   */\n      add\n        /* \"#utility.yul\":9128:9144   */\n      swap1\n      pop\n        /* \"#utility.yul\":8889:9150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9156:9341   */\n    tag_66:\n      0x00\n        /* \"#utility.yul\":9213:9233   */\n      tag_239\n        /* \"#utility.yul\":9231:9232   */\n      dup3\n        /* \"#utility.yul\":9213:9233   */\n      tag_205\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9208:9233   */\n      swap2\n      pop\n        /* \"#utility.yul\":9247:9267   */\n      tag_240\n        /* \"#utility.yul\":9265:9266   */\n      dup4\n        /* \"#utility.yul\":9247:9267   */\n      tag_205\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9242:9267   */\n      swap3\n      pop\n        /* \"#utility.yul\":9286:9287   */\n      dup3\n        /* \"#utility.yul\":9276:9278   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":9291:9309   */\n      tag_242\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":9276:9278   */\n    tag_241:\n        /* \"#utility.yul\":9333:9334   */\n      dup3\n        /* \"#utility.yul\":9330:9331   */\n      dup3\n        /* \"#utility.yul\":9326:9335   */\n      div\n        /* \"#utility.yul\":9321:9335   */\n      swap1\n      pop\n        /* \"#utility.yul\":9198:9341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9347:9695   */\n    tag_63:\n      0x00\n        /* \"#utility.yul\":9410:9430   */\n      tag_245\n        /* \"#utility.yul\":9428:9429   */\n      dup3\n        /* \"#utility.yul\":9410:9430   */\n      tag_205\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9405:9430   */\n      swap2\n      pop\n        /* \"#utility.yul\":9444:9464   */\n      tag_246\n        /* \"#utility.yul\":9462:9463   */\n      dup4\n        /* \"#utility.yul\":9444:9464   */\n      tag_205\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9439:9464   */\n      swap3\n      pop\n        /* \"#utility.yul\":9632:9633   */\n      dup2\n        /* \"#utility.yul\":9564:9630   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9560:9634   */\n      div\n        /* \"#utility.yul\":9557:9558   */\n      dup4\n        /* \"#utility.yul\":9554:9635   */\n      gt\n        /* \"#utility.yul\":9549:9550   */\n      dup3\n        /* \"#utility.yul\":9542:9551   */\n      iszero\n        /* \"#utility.yul\":9535:9552   */\n      iszero\n        /* \"#utility.yul\":9531:9636   */\n      and\n        /* \"#utility.yul\":9528:9530   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":9639:9657   */\n      tag_248\n      tag_237\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":9528:9530   */\n    tag_247:\n        /* \"#utility.yul\":9687:9688   */\n      dup3\n        /* \"#utility.yul\":9684:9685   */\n      dup3\n        /* \"#utility.yul\":9680:9689   */\n      mul\n        /* \"#utility.yul\":9669:9689   */\n      swap1\n      pop\n        /* \"#utility.yul\":9395:9695   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9701:9892   */\n    tag_61:\n      0x00\n        /* \"#utility.yul\":9761:9781   */\n      tag_250\n        /* \"#utility.yul\":9779:9780   */\n      dup3\n        /* \"#utility.yul\":9761:9781   */\n      tag_205\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9756:9781   */\n      swap2\n      pop\n        /* \"#utility.yul\":9795:9815   */\n      tag_251\n        /* \"#utility.yul\":9813:9814   */\n      dup4\n        /* \"#utility.yul\":9795:9815   */\n      tag_205\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":9790:9815   */\n      swap3\n      pop\n        /* \"#utility.yul\":9834:9835   */\n      dup3\n        /* \"#utility.yul\":9831:9832   */\n      dup3\n        /* \"#utility.yul\":9828:9836   */\n      lt\n        /* \"#utility.yul\":9825:9827   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":9839:9857   */\n      tag_253\n      tag_237\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9825:9827   */\n    tag_252:\n        /* \"#utility.yul\":9884:9885   */\n      dup3\n        /* \"#utility.yul\":9881:9882   */\n      dup3\n        /* \"#utility.yul\":9877:9886   */\n      sub\n        /* \"#utility.yul\":9869:9886   */\n      swap1\n      pop\n        /* \"#utility.yul\":9746:9892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9898:9994   */\n    tag_176:\n      0x00\n        /* \"#utility.yul\":9964:9988   */\n      tag_255\n        /* \"#utility.yul\":9982:9987   */\n      dup3\n        /* \"#utility.yul\":9964:9988   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9953:9988   */\n      swap1\n      pop\n        /* \"#utility.yul\":9943:9994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10000:10090   */\n    tag_257:\n      0x00\n        /* \"#utility.yul\":10077:10082   */\n      dup2\n        /* \"#utility.yul\":10070:10083   */\n      iszero\n        /* \"#utility.yul\":10063:10084   */\n      iszero\n        /* \"#utility.yul\":10052:10084   */\n      swap1\n      pop\n        /* \"#utility.yul\":10042:10090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10096:10245   */\n    tag_180:\n      0x00\n        /* \"#utility.yul\":10172:10238   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10165:10170   */\n      dup3\n        /* \"#utility.yul\":10161:10239   */\n      and\n        /* \"#utility.yul\":10150:10239   */\n      swap1\n      pop\n        /* \"#utility.yul\":10140:10245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10251:10377   */\n    tag_256:\n      0x00\n        /* \"#utility.yul\":10328:10370   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10321:10326   */\n      dup3\n        /* \"#utility.yul\":10317:10371   */\n      and\n        /* \"#utility.yul\":10306:10371   */\n      swap1\n      pop\n        /* \"#utility.yul\":10296:10377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10383:10460   */\n    tag_205:\n      0x00\n        /* \"#utility.yul\":10449:10454   */\n      dup2\n        /* \"#utility.yul\":10438:10454   */\n      swap1\n      pop\n        /* \"#utility.yul\":10428:10460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10466:10618   */\n    tag_184:\n      0x00\n        /* \"#utility.yul\":10562:10612   */\n      tag_263\n        /* \"#utility.yul\":10606:10611   */\n      dup3\n        /* \"#utility.yul\":10562:10612   */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":10549:10612   */\n      swap1\n      pop\n        /* \"#utility.yul\":10539:10618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10624:10750   */\n    tag_264:\n      0x00\n        /* \"#utility.yul\":10720:10744   */\n      tag_266\n        /* \"#utility.yul\":10738:10743   */\n      dup3\n        /* \"#utility.yul\":10720:10744   */\n      tag_256\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10707:10744   */\n      swap1\n      pop\n        /* \"#utility.yul\":10697:10750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10756:10912   */\n    tag_188:\n      0x00\n        /* \"#utility.yul\":10854:10906   */\n      tag_268\n        /* \"#utility.yul\":10900:10905   */\n      dup3\n        /* \"#utility.yul\":10854:10906   */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10841:10906   */\n      swap1\n      pop\n        /* \"#utility.yul\":10831:10912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10918:11046   */\n    tag_269:\n      0x00\n        /* \"#utility.yul\":11016:11040   */\n      tag_271\n        /* \"#utility.yul\":11034:11039   */\n      dup3\n        /* \"#utility.yul\":11016:11040   */\n      tag_256\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":11003:11040   */\n      swap1\n      pop\n        /* \"#utility.yul\":10993:11046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11052:11223   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":11114:11138   */\n      tag_273\n        /* \"#utility.yul\":11132:11137   */\n      dup3\n        /* \"#utility.yul\":11114:11138   */\n      tag_205\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":11105:11138   */\n      swap2\n      pop\n        /* \"#utility.yul\":11160:11164   */\n      0x00\n        /* \"#utility.yul\":11153:11158   */\n      dup3\n        /* \"#utility.yul\":11150:11165   */\n      eq\n        /* \"#utility.yul\":11147:11149   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":11168:11186   */\n      tag_275\n      tag_237\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":11147:11149   */\n    tag_274:\n        /* \"#utility.yul\":11215:11216   */\n      0x01\n        /* \"#utility.yul\":11208:11213   */\n      dup3\n        /* \"#utility.yul\":11204:11217   */\n      sub\n        /* \"#utility.yul\":11197:11217   */\n      swap1\n      pop\n        /* \"#utility.yul\":11095:11223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11229:11462   */\n    tag_73:\n      0x00\n        /* \"#utility.yul\":11291:11315   */\n      tag_277\n        /* \"#utility.yul\":11309:11314   */\n      dup3\n        /* \"#utility.yul\":11291:11315   */\n      tag_205\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":11282:11315   */\n      swap2\n      pop\n        /* \"#utility.yul\":11337:11403   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11330:11335   */\n      dup3\n        /* \"#utility.yul\":11327:11404   */\n      eq\n        /* \"#utility.yul\":11324:11326   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":11407:11425   */\n      tag_279\n      tag_237\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11324:11326   */\n    tag_278:\n        /* \"#utility.yul\":11454:11455   */\n      0x01\n        /* \"#utility.yul\":11447:11452   */\n      dup3\n        /* \"#utility.yul\":11443:11456   */\n      add\n        /* \"#utility.yul\":11436:11456   */\n      swap1\n      pop\n        /* \"#utility.yul\":11272:11462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11468:11648   */\n    tag_237:\n        /* \"#utility.yul\":11516:11593   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11513:11514   */\n      0x00\n        /* \"#utility.yul\":11506:11594   */\n      mstore\n        /* \"#utility.yul\":11613:11617   */\n      0x11\n        /* \"#utility.yul\":11610:11611   */\n      0x04\n        /* \"#utility.yul\":11603:11618   */\n      mstore\n        /* \"#utility.yul\":11637:11641   */\n      0x24\n        /* \"#utility.yul\":11634:11635   */\n      0x00\n        /* \"#utility.yul\":11627:11642   */\n      revert\n        /* \"#utility.yul\":11654:11834   */\n    tag_243:\n        /* \"#utility.yul\":11702:11779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11699:11700   */\n      0x00\n        /* \"#utility.yul\":11692:11780   */\n      mstore\n        /* \"#utility.yul\":11799:11803   */\n      0x12\n        /* \"#utility.yul\":11796:11797   */\n      0x04\n        /* \"#utility.yul\":11789:11804   */\n      mstore\n        /* \"#utility.yul\":11823:11827   */\n      0x24\n        /* \"#utility.yul\":11820:11821   */\n      0x00\n        /* \"#utility.yul\":11813:11828   */\n      revert\n        /* \"#utility.yul\":11840:11962   */\n    tag_137:\n        /* \"#utility.yul\":11913:11937   */\n      tag_283\n        /* \"#utility.yul\":11931:11936   */\n      dup2\n        /* \"#utility.yul\":11913:11937   */\n      tag_176\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11906:11911   */\n      dup2\n        /* \"#utility.yul\":11903:11938   */\n      eq\n        /* \"#utility.yul\":11893:11895   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":11952:11953   */\n      0x00\n        /* \"#utility.yul\":11949:11950   */\n      dup1\n        /* \"#utility.yul\":11942:11954   */\n      revert\n        /* \"#utility.yul\":11893:11895   */\n    tag_284:\n        /* \"#utility.yul\":11883:11962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11968:12084   */\n    tag_141:\n        /* \"#utility.yul\":12038:12059   */\n      tag_286\n        /* \"#utility.yul\":12053:12058   */\n      dup2\n        /* \"#utility.yul\":12038:12059   */\n      tag_257\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12031:12036   */\n      dup2\n        /* \"#utility.yul\":12028:12060   */\n      eq\n        /* \"#utility.yul\":12018:12020   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":12074:12075   */\n      0x00\n        /* \"#utility.yul\":12071:12072   */\n      dup1\n        /* \"#utility.yul\":12064:12076   */\n      revert\n        /* \"#utility.yul\":12018:12020   */\n    tag_287:\n        /* \"#utility.yul\":12008:12084   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12090:12212   */\n    tag_150:\n        /* \"#utility.yul\":12163:12187   */\n      tag_289\n        /* \"#utility.yul\":12181:12186   */\n      dup2\n        /* \"#utility.yul\":12163:12187   */\n      tag_205\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":12156:12161   */\n      dup2\n        /* \"#utility.yul\":12153:12188   */\n      eq\n        /* \"#utility.yul\":12143:12145   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":12202:12203   */\n      0x00\n        /* \"#utility.yul\":12199:12200   */\n      dup1\n        /* \"#utility.yul\":12192:12204   */\n      revert\n        /* \"#utility.yul\":12143:12145   */\n    tag_290:\n        /* \"#utility.yul\":12133:12212   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203865043a7063c5ea1998ff90778c50cb4f6f68298bf256fc5dff4d8bbae24d1464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1634:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:6",
														"type": ""
													}
												],
												"src": "156:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "433:625:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "480:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "489:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "492:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "454:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "463:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "446:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:33:6"
															},
															"nodeType": "YulIf",
															"src": "443:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "506:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "521:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "525:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "550:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "596:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "607:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "592:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "592:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "616:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "560:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "550:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "644:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "659:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "663:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "735:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "746:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "731:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "731:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "755:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "699:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "783:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "798:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "812:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "802:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "828:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "874:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "870:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "870:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "894:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "838:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "828:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "922:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "937:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "941:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "967:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1013:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1024:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1009:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1009:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1033:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "977:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "967:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "390:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "402:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "410:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "418:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "426:6:6",
														"type": ""
													}
												],
												"src": "305:753:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1148:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1130:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1119:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1091:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1101:7:6",
														"type": ""
													}
												],
												"src": "1064:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1236:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1243:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1232:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1221:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1193:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1203:7:6",
														"type": ""
													}
												],
												"src": "1166:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1343:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1353:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1364:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1353:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1325:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1335:7:6",
														"type": ""
													}
												],
												"src": "1298:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1481:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1490:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1493:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1483:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1483:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1483:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1447:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1454:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1454:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1444:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:43:6"
															},
															"nodeType": "YulIf",
															"src": "1434:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1417:5:6",
														"type": ""
													}
												],
												"src": "1381:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1552:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1609:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1611:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1611:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1575:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1600:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1582:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1572:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1565:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1565:43:6"
															},
															"nodeType": "YulIf",
															"src": "1562:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													}
												],
												"src": "1509:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620016c8380380620016c8833981810160405281019062000037919062000138565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055505050505062000216565b6000815190506200011b81620001e2565b92915050565b6000815190506200013281620001fc565b92915050565b600080600080608085870312156200014f57600080fd5b60006200015f878288016200010a565b945050602062000172878288016200010a565b935050604062000185878288016200010a565b9250506060620001988782880162000121565b91505092959194509250565b6000620001b182620001b8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620001ed81620001a4565b8114620001f957600080fd5b50565b6200020781620001d8565b81146200021357600080fd5b50565b6114a280620002266000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806347ccca021161007157806347ccca021461017857806370a0823114610196578063a694fc3a146101c6578063be040fb0146101e2578063f7c618c1146101ec578063fb75b2c71461020a576100a9565b806310098ad5146100ae578063150b7a02146100de5780632ce9aead1461010e5780632d6a1fa61461013e5780632e1a7d4d1461015c575b600080fd5b6100c860048036038101906100c39190610d52565b610228565b6040516100d59190611159565b60405180910390f35b6100f860048036038101906100f39190610d7b565b610336565b6040516101059190611088565b60405180910390f35b61012860048036038101906101239190610d52565b610484565b6040516101359190611159565b60405180910390f35b61014661049c565b6040516101539190611159565b60405180910390f35b61017660048036038101906101719190610e24565b6104a2565b005b61018061070e565b60405161018d91906110be565b60405180910390f35b6101b060048036038101906101ab9190610d52565b610732565b6040516101bd9190611159565b60405180910390f35b6101e060048036038101906101db9190610e24565b61074a565b005b6101ea6107e3565b005b6101f4610c60565b60405161020191906110a3565b60405180910390f35b610212610c86565b60405161021f919061100d565b60405180910390f35b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426102769190611266565b905060006201518060035483600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102cc919061120c565b6102d6919061120c565b6102e091906111db565b905080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461032d9190611185565b92505050919050565b60008461034281610228565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550856004600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061046b90611380565b919050555063150b7a0260e01b91505095945050505050565b60066020528060005260406000206000915090505481565b60035481565b6104aa610cac565b6104b381610228565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610542610cac565b73ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d9906110f9565b60405180910390fd5b6004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560056000610624610cac565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061066f90611356565b919050555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd306106b9610cac565b856040518463ffffffff1660e01b81526004016106d893929190611051565b600060405180830381600087803b1580156106f257600080fd5b505af1158015610706573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e61078e610cac565b30846040518463ffffffff1660e01b81526004016107ae93929190611051565b600060405180830381600087803b1580156107c857600080fd5b505af11580156107dc573d6000803e3d6000fd5b5050505050565b6107eb610cac565b6107f481610228565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060076000610889610cac565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610909576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610900906110d9565b60405180910390fd5b600060076000610917610cac565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b81526004016109d6929190611028565b60206040518083038186803b1580156109ee57600080fd5b505afa158015610a02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a269190610e4d565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610aa7919061100d565b60206040518083038186803b158015610abf57600080fd5b505afa158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af79190610e4d565b905082821015610b3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3390611139565b60405180910390fd5b82811015610b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7690611119565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610be8610cac565b866040518463ffffffff1660e01b8152600401610c0793929190611051565b602060405180830381600087803b158015610c2157600080fd5b505af1158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c599190610dfb565b5050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600081359050610cc381611427565b92915050565b600081519050610cd88161143e565b92915050565b60008083601f840112610cf057600080fd5b8235905067ffffffffffffffff811115610d0957600080fd5b602083019150836001820283011115610d2157600080fd5b9250929050565b600081359050610d3781611455565b92915050565b600081519050610d4c81611455565b92915050565b600060208284031215610d6457600080fd5b6000610d7284828501610cb4565b91505092915050565b600080600080600060808688031215610d9357600080fd5b6000610da188828901610cb4565b9550506020610db288828901610cb4565b9450506040610dc388828901610d28565b935050606086013567ffffffffffffffff811115610de057600080fd5b610dec88828901610cde565b92509250509295509295909350565b600060208284031215610e0d57600080fd5b6000610e1b84828501610cc9565b91505092915050565b600060208284031215610e3657600080fd5b6000610e4484828501610d28565b91505092915050565b600060208284031215610e5f57600080fd5b6000610e6d84828501610d3d565b91505092915050565b610e7f8161129a565b82525050565b610e8e816112b8565b82525050565b610e9d8161130e565b82525050565b610eac81611332565b82525050565b6000610ebf601183611174565b91507f4e6f7468696e6720746f2072656465656d0000000000000000000000000000006000830152602082019050919050565b6000610eff601483611174565b91507f546f6b656e206973206e6f74207374616b65642e0000000000000000000000006000830152602082019050919050565b6000610f3f602183611174565b91507f436865636b20746865207265776172642077616c6c657427732062616c616e6360008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fa5602383611174565b91507f436865636b20746865207265776172642077616c6c6574277320616c6c6f776160008301527f6e636500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61100781611304565b82525050565b60006020820190506110226000830184610e76565b92915050565b600060408201905061103d6000830185610e76565b61104a6020830184610e76565b9392505050565b60006060820190506110666000830186610e76565b6110736020830185610e76565b6110806040830184610ffe565b949350505050565b600060208201905061109d6000830184610e85565b92915050565b60006020820190506110b86000830184610e94565b92915050565b60006020820190506110d36000830184610ea3565b92915050565b600060208201905081810360008301526110f281610eb2565b9050919050565b6000602082019050818103600083015261111281610ef2565b9050919050565b6000602082019050818103600083015261113281610f32565b9050919050565b6000602082019050818103600083015261115281610f98565b9050919050565b600060208201905061116e6000830184610ffe565b92915050565b600082825260208201905092915050565b600061119082611304565b915061119b83611304565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111d0576111cf6113c9565b5b828201905092915050565b60006111e682611304565b91506111f183611304565b925082611201576112006113f8565b5b828204905092915050565b600061121782611304565b915061122283611304565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561125b5761125a6113c9565b5b828202905092915050565b600061127182611304565b915061127c83611304565b92508282101561128f5761128e6113c9565b5b828203905092915050565b60006112a5826112e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061131982611320565b9050919050565b600061132b826112e4565b9050919050565b600061133d82611344565b9050919050565b600061134f826112e4565b9050919050565b600061136182611304565b91506000821415611375576113746113c9565b5b600182039050919050565b600061138b82611304565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113be576113bd6113c9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6114308161129a565b811461143b57600080fd5b50565b611447816112ac565b811461145257600080fd5b50565b61145e81611304565b811461146957600080fd5b5056fea26469706673582212203865043a7063c5ea1998ff90778c50cb4f6f68298bf256fc5dff4d8bbae24d1464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x16C8 CODESIZE SUB DUP1 PUSH3 0x16C8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x138 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x216 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x11B DUP2 PUSH3 0x1E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x132 DUP2 PUSH3 0x1FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x15F DUP8 DUP3 DUP9 ADD PUSH3 0x10A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x172 DUP8 DUP3 DUP9 ADD PUSH3 0x10A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x185 DUP8 DUP3 DUP9 ADD PUSH3 0x10A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x198 DUP8 DUP3 DUP9 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B1 DUP3 PUSH3 0x1B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1ED DUP2 PUSH3 0x1A4 JUMP JUMPDEST DUP2 EQ PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x207 DUP2 PUSH3 0x1D8 JUMP JUMPDEST DUP2 EQ PUSH3 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14A2 DUP1 PUSH3 0x226 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xBE040FB0 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xFB75B2C7 EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x10098AD5 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x2CE9AEAD EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x2D6A1FA6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x7E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH2 0xC86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x15180 PUSH1 0x3 SLOAD DUP4 PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x342 DUP2 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x46B SWAP1 PUSH2 0x1380 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4AA PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x4B3 DUP2 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x542 PUSH2 0xCAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D9 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 PUSH1 0x0 PUSH2 0x624 PUSH2 0xCAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x66F SWAP1 PUSH2 0x1356 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH2 0x6B9 PUSH2 0xCAC JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x706 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH2 0x78E PUSH2 0xCAC JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EB PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x889 PUSH2 0xCAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x900 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x917 PUSH2 0xCAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP3 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA26 SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST SWAP1 POP DUP3 DUP3 LT ISZERO PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB33 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB76 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE8 PUSH2 0xCAC JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC07 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC59 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCC3 DUP2 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCD8 DUP2 PUSH2 0x143E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD37 DUP2 PUSH2 0x1455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4C DUP2 PUSH2 0x1455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD72 DUP5 DUP3 DUP6 ADD PUSH2 0xCB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDA1 DUP9 DUP3 DUP10 ADD PUSH2 0xCB4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xDB2 DUP9 DUP3 DUP10 ADD PUSH2 0xCB4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xDC3 DUP9 DUP3 DUP10 ADD PUSH2 0xD28 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDEC DUP9 DUP3 DUP10 ADD PUSH2 0xCDE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP5 DUP3 DUP6 ADD PUSH2 0xCC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE44 DUP5 DUP3 DUP6 ADD PUSH2 0xD28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE6D DUP5 DUP3 DUP6 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE7F DUP2 PUSH2 0x129A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE8E DUP2 PUSH2 0x12B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE9D DUP2 PUSH2 0x130E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0x1332 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEBF PUSH1 0x11 DUP4 PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7468696E6720746F2072656465656D000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFF PUSH1 0x14 DUP4 PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E206973206E6F74207374616B65642E000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x21 DUP4 PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP PUSH32 0x436865636B20746865207265776172642077616C6C657427732062616C616E63 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA5 PUSH1 0x23 DUP4 PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP PUSH32 0x436865636B20746865207265776172642077616C6C6574277320616C6C6F7761 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6E63650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1022 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x103D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x104A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE76 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1066 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x1073 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x1080 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFFE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F2 DUP2 PUSH2 0xEB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1112 DUP2 PUSH2 0xEF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1132 DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1152 DUP2 PUSH2 0xF98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH2 0x119B DUP4 PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11CF PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E6 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F1 DUP4 PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1201 JUMPI PUSH2 0x1200 PUSH2 0x13F8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1217 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH2 0x1222 DUP4 PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x125B JUMPI PUSH2 0x125A PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1271 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH2 0x127C DUP4 PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x128F JUMPI PUSH2 0x128E PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A5 DUP3 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1319 DUP3 PUSH2 0x1320 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132B DUP3 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133D DUP3 PUSH2 0x1344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134F DUP3 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1361 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1375 JUMPI PUSH2 0x1374 PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138B DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x13BE JUMPI PUSH2 0x13BD PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1430 DUP2 PUSH2 0x129A JUMP JUMPDEST DUP2 EQ PUSH2 0x143B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1447 DUP2 PUSH2 0x12AC JUMP JUMPDEST DUP2 EQ PUSH2 0x1452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x145E DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP2 EQ PUSH2 0x1469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE PUSH6 0x43A7063C5EA NOT SWAP9 SELFDESTRUCT SWAP1 PUSH24 0x8C50CB4F6F68298BF256FC5DFF4D8BBAE24D1464736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "2362:3187:5:-:0;;;3044:336;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3221:10;3207:3;;:25;;;;;;;;;;;;;;;;;;3264:18;3243:11;;:40;;;;;;;;;;;;;;;;;;3309:19;3294:12;;:34;;;;;;;;;;;;;;;;;;3362:10;3339:20;:33;;;;3044:336;;;;2362:3187;;7:143:6;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:753::-;;;;;475:3;463:9;454:7;450:23;446:33;443:2;;;492:1;489;482:12;443:2;535:1;560:64;616:7;607:6;596:9;592:22;560:64;:::i;:::-;550:74;;506:128;673:2;699:64;755:7;746:6;735:9;731:22;699:64;:::i;:::-;689:74;;644:129;812:2;838:64;894:7;885:6;874:9;870:22;838:64;:::i;:::-;828:74;;783:129;951:2;977:64;1033:7;1024:6;1013:9;1009:22;977:64;:::i;:::-;967:74;;922:129;433:625;;;;;;;:::o;1064:96::-;;1130:24;1148:5;1130:24;:::i;:::-;1119:35;;1109:51;;;:::o;1166:126::-;;1243:42;1236:5;1232:54;1221:65;;1211:81;;;:::o;1298:77::-;;1364:5;1353:16;;1343:32;;;:::o;1381:122::-;1454:24;1472:5;1454:24;:::i;:::-;1447:5;1444:35;1434:2;;1493:1;1490;1483:12;1434:2;1424:79;:::o;1509:122::-;1582:24;1600:5;1582:24;:::i;:::-;1575:5;1572:35;1562:2;;1621:1;1618;1611:12;1562:2;1552:79;:::o;2362:3187:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12215:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "382:277:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "431:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "440:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "443:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "433:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "433:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "410:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "418:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "406:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "406:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "425:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "402:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "395:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:35:6"
															},
															"nodeType": "YulIf",
															"src": "392:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "456:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "479:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "466:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "529:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "538:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "541:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "531:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "531:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "531:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "501:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "498:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:30:6"
															},
															"nodeType": "YulIf",
															"src": "495:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "554:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "570:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "578:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "566:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "566:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "554:8:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "637:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "646:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "649:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "639:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "639:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "639:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "602:8:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "616:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "624:4:6",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "612:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "612:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "598:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "598:32:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "632:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "595:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "595:41:6"
															},
															"nodeType": "YulIf",
															"src": "592:2:6"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "349:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "357:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "365:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "375:6:6",
														"type": ""
													}
												],
												"src": "308:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "717:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "727:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "749:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "736:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "727:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "792:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "765:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "765:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "695:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "703:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "711:5:6",
														"type": ""
													}
												],
												"src": "665:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "873:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "883:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "898:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "892:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "883:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "941:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "914:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "914:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "914:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "851:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "859:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "867:5:6",
														"type": ""
													}
												],
												"src": "810:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1025:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1071:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1083:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1073:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1073:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1073:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1046:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1055:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1042:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1067:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1038:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:32:6"
															},
															"nodeType": "YulIf",
															"src": "1035:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1097:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1112:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1126:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1116:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1141:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1176:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1187:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1172:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1172:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1196:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1151:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1151:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1141:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "995:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1006:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1018:6:6",
														"type": ""
													}
												],
												"src": "959:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:693:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1410:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1419:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1422:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1412:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1384:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1380:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1380:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:33:6"
															},
															"nodeType": "YulIf",
															"src": "1373:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1436:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1480:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1563:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1608:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1736:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1819:230:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1834:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1865:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1876:2:6",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1861:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1861:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1848:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1838:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1927:16:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1936:1:6",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1939:1:6",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1929:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1929:12:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1929:12:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1907:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1896:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "1893:2:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1957:82:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2011:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2022:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2007:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2007:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2031:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1975:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1975:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1957:6:6"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1965:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1301:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1312:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1324:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1332:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1340:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1348:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1356:6:6",
														"type": ""
													}
												],
												"src": "1227:829:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2136:204:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2182:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2191:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2194:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2184:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2184:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2184:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2157:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2166:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2153:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2153:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2178:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2149:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:32:6"
															},
															"nodeType": "YulIf",
															"src": "2146:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2208:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2223:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2237:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2227:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2252:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2295:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2306:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2291:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2291:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2315:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2262:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2262:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2252:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2106:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2117:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2129:6:6",
														"type": ""
													}
												],
												"src": "2062:278:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2412:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2458:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2467:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2470:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2460:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2460:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2460:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2433:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2442:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2429:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2429:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2454:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2425:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:32:6"
															},
															"nodeType": "YulIf",
															"src": "2422:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2484:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2499:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2513:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2503:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2528:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2563:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2574:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2559:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2559:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2583:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2538:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2528:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2382:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2393:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2405:6:6",
														"type": ""
													}
												],
												"src": "2346:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2691:207:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2737:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2746:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2749:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2739:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2739:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2739:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2712:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2721:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2708:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2708:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2733:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2704:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2704:32:6"
															},
															"nodeType": "YulIf",
															"src": "2701:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2763:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2807:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2853:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2864:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2849:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2849:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2873:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2817:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2817:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2661:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2672:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2684:6:6",
														"type": ""
													}
												],
												"src": "2614:284:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2969:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2986:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2991:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2979:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2979:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2979:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2957:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2964:3:6",
														"type": ""
													}
												],
												"src": "2904:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3091:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3108:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3130:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3113:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3101:36:6"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3079:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3086:3:6",
														"type": ""
													}
												],
												"src": "3028:115:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3227:79:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3244:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3293:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3249:43:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:50:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:63:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3237:63:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3215:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3222:3:6",
														"type": ""
													}
												],
												"src": "3149:157:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3392:81:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3409:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3460:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$193_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3414:45:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3414:52:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3402:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3402:65:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$193_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3380:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3387:3:6",
														"type": ""
													}
												],
												"src": "3312:161:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3625:169:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3635:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3701:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3706:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3642:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3730:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3735:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3726:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3726:11:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3739:19:6",
																		"type": "",
																		"value": "Nothing to redeem"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:40:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3769:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3776:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3769:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3613:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3621:3:6",
														"type": ""
													}
												],
												"src": "3479:315:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:172:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3956:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4022:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4027:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3963:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3956:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4051:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4056:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4047:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4047:11:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4060:22:6",
																		"type": "",
																		"value": "Token is not staked."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4040:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4040:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4040:43:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4093:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4104:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4109:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4100:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4100:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4093:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3934:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3942:3:6",
														"type": ""
													}
												],
												"src": "3800:318:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4270:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4280:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4346:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4287:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4287:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4280:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4375:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4380:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4371:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4371:11:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4384:34:6",
																		"type": "",
																		"value": "Check the reward wallet's balanc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4364:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4364:55:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4440:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4445:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4436:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4436:12:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4450:3:6",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4429:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:25:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4464:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4475:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4480:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4471:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8209871dbc5c1c0faeeae3916a29a6802ec284e44588f790fc2ee21b2e667ad2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4258:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4266:3:6",
														"type": ""
													}
												],
												"src": "4124:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:221:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4651:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4717:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4658:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4746:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4751:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4742:11:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4755:34:6",
																		"type": "",
																		"value": "Check the reward wallet's allowa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4735:55:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4811:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4816:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4807:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4807:12:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4821:5:6",
																		"type": "",
																		"value": "nce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4800:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4800:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4800:27:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4837:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4848:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4853:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4837:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8c6481be45433f8a4fa4dba998a6b9df8caf30eb95aa71ca57432c30a0b6c34f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4629:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4637:3:6",
														"type": ""
													}
												],
												"src": "4495:367:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4933:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4950:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4973:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4955:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4955:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4943:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4943:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4943:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4921:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4928:3:6",
														"type": ""
													}
												],
												"src": "4868:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5090:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5100:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5112:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5123:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5108:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5108:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5100:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5180:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5193:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5204:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5189:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5189:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5136:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5136:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5062:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5074:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5085:4:6",
														"type": ""
													}
												],
												"src": "4992:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5346:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5356:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5368:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5364:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5364:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5356:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5436:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5449:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5460:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5445:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5392:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5392:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5392:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5517:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5530:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5541:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5526:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5473:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5473:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5473:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5310:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5322:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5330:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5341:4:6",
														"type": ""
													}
												],
												"src": "5220:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5712:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5722:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5734:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5745:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5730:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5730:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5722:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5802:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5815:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5826:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5811:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5811:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5758:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5758:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5758:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5896:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5907:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5892:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5892:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5839:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5839:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5839:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5965:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5978:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5989:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5974:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5974:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5921:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5921:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5921:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5668:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5680:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5688:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5696:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5707:4:6",
														"type": ""
													}
												],
												"src": "5558:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6102:122:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6112:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6124:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6135:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6120:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6112:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6190:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6203:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6214:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6199:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6199:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6148:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6148:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6148:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6074:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6086:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6097:4:6",
														"type": ""
													}
												],
												"src": "6006:218:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6341:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6351:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6363:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6374:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6359:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6359:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6351:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6444:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6457:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6468:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6453:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6387:56:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:84:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6387:84:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6313:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6325:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6336:4:6",
														"type": ""
													}
												],
												"src": "6230:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6597:139:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6607:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6619:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6630:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6615:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6615:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6607:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6702:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6715:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6726:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6711:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6711:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$193_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6643:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:86:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6643:86:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$193__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6569:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6581:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6592:4:6",
														"type": ""
													}
												],
												"src": "6484:252:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6913:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6923:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6935:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6946:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6931:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6923:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6970:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6981:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6966:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6989:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6995:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6985:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7015:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7149:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7023:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7023:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7015:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6893:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6908:4:6",
														"type": ""
													}
												],
												"src": "6742:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7338:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7348:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7360:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7371:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7356:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7348:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7406:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7391:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7391:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7414:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7420:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7410:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7410:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7384:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7384:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7440:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7574:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7448:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7448:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7440:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7318:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7333:4:6",
														"type": ""
													}
												],
												"src": "7167:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7763:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7773:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7785:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7796:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7781:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7773:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7820:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7831:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7816:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7816:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7839:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7845:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7835:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7809:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7809:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7865:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7999:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8209871dbc5c1c0faeeae3916a29a6802ec284e44588f790fc2ee21b2e667ad2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7873:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7873:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7865:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8209871dbc5c1c0faeeae3916a29a6802ec284e44588f790fc2ee21b2e667ad2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7743:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7758:4:6",
														"type": ""
													}
												],
												"src": "7592:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8188:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8198:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8210:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8221:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8206:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8198:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8245:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8256:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8241:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8241:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8264:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8270:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8260:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8260:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8234:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8424:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8c6481be45433f8a4fa4dba998a6b9df8caf30eb95aa71ca57432c30a0b6c34f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8298:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8298:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8290:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c6481be45433f8a4fa4dba998a6b9df8caf30eb95aa71ca57432c30a0b6c34f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8168:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8183:4:6",
														"type": ""
													}
												],
												"src": "8017:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8540:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8550:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8562:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8573:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8558:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8558:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8550:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8630:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8643:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8654:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8639:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8586:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8586:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8512:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8524:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8535:4:6",
														"type": ""
													}
												],
												"src": "8442:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8766:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8783:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8788:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8776:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8776:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8804:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8823:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8828:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8819:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8819:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8804:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8738:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8743:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8754:11:6",
														"type": ""
													}
												],
												"src": "8670:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8889:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8899:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8922:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8904:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8904:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8899:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8933:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8956:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8938:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8938:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8933:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9098:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9098:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9017:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9024:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9092:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9020:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9020:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9014:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:81:6"
															},
															"nodeType": "YulIf",
															"src": "9011:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9128:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9139:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9142:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9135:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9135:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9128:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8876:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8879:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8885:3:6",
														"type": ""
													}
												],
												"src": "8845:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9198:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9208:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9231:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9213:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9213:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9208:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9242:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9265:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9247:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9247:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9242:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9289:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9291:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9291:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9291:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9286:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9279:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:9:6"
															},
															"nodeType": "YulIf",
															"src": "9276:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9321:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9330:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9333:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9326:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9326:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9321:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9187:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9190:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9196:1:6",
														"type": ""
													}
												],
												"src": "9156:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9395:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9405:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9428:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9410:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9410:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9405:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9439:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9462:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9444:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9444:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9439:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9637:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9639:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9639:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9639:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9549:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9542:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9542:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9535:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9535:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9557:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9564:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9632:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9560:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9560:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9554:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9554:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9531:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9531:105:6"
															},
															"nodeType": "YulIf",
															"src": "9528:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9669:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9684:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9687:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9680:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9680:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9669:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9378:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9381:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9387:7:6",
														"type": ""
													}
												],
												"src": "9347:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9746:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9756:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9779:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9761:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9761:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9756:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9790:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9813:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9795:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9795:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9790:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9837:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9839:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9839:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9839:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9831:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9834:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9828:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9828:8:6"
															},
															"nodeType": "YulIf",
															"src": "9825:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9869:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9881:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9884:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9877:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9877:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9869:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9732:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9735:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9741:4:6",
														"type": ""
													}
												],
												"src": "9701:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9943:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9953:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9982:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9964:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9964:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9953:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9925:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9935:7:6",
														"type": ""
													}
												],
												"src": "9898:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10042:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10052:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10077:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10070:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10070:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10063:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10063:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10052:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10024:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10034:7:6",
														"type": ""
													}
												],
												"src": "10000:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10140:105:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10150:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10165:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10172:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10161:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10161:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10150:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10122:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10132:7:6",
														"type": ""
													}
												],
												"src": "10096:149:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10296:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10306:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10321:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10328:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10317:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10317:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10306:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10278:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10288:7:6",
														"type": ""
													}
												],
												"src": "10251:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10428:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10438:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10449:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10438:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10410:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10420:7:6",
														"type": ""
													}
												],
												"src": "10383:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10539:79:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10549:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10606:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$77_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10562:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10562:50:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10549:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10519:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10529:9:6",
														"type": ""
													}
												],
												"src": "10466:152:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10697:53:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10707:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10738:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10720:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10720:24:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10707:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10677:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10687:9:6",
														"type": ""
													}
												],
												"src": "10624:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10831:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10841:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10900:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC721_$193_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10854:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10854:52:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10841:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$193_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10811:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10821:9:6",
														"type": ""
													}
												],
												"src": "10756:156:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10993:53:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11003:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11034:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11016:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11016:24:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11003:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$193_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10973:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10983:9:6",
														"type": ""
													}
												],
												"src": "10918:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11095:128:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11105:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11132:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11114:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11114:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11105:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11166:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11168:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11168:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11168:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11153:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11160:4:6",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11150:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11150:15:6"
															},
															"nodeType": "YulIf",
															"src": "11147:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11197:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11208:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11215:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11204:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11204:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11197:3:6"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11081:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11091:3:6",
														"type": ""
													}
												],
												"src": "11052:171:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11272:190:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11282:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11309:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11291:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11291:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11282:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11405:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11407:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11407:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11407:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11330:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11337:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11327:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11327:77:6"
															},
															"nodeType": "YulIf",
															"src": "11324:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11436:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11447:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11454:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11443:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11443:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11436:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11258:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11268:3:6",
														"type": ""
													}
												],
												"src": "11229:233:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11496:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11516:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11506:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11506:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11610:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11613:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11603:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11603:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11603:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11634:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11637:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11627:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11627:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11627:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11468:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11682:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11699:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11702:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11692:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11692:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11796:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11799:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11789:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11789:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11789:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11820:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11823:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11813:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11813:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11813:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11654:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11883:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11940:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11949:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11952:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11942:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11942:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11942:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11906:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11931:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "11913:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11913:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11903:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11903:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11896:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11896:43:6"
															},
															"nodeType": "YulIf",
															"src": "11893:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11876:5:6",
														"type": ""
													}
												],
												"src": "11840:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12008:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12062:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12071:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12074:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12064:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12064:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12064:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12031:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12053:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "12038:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12038:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12028:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12028:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12021:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12021:40:6"
															},
															"nodeType": "YulIf",
															"src": "12018:2:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12001:5:6",
														"type": ""
													}
												],
												"src": "11968:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12133:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12190:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12199:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12202:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12192:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12192:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12192:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12156:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12181:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "12163:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12163:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12153:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12153:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12146:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12146:43:6"
															},
															"nodeType": "YulIf",
															"src": "12143:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12126:5:6",
														"type": ""
													}
												],
												"src": "12090:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$193_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$193_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n\n        mstore(add(pos, 0), \"Nothing to redeem\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"Token is not staked.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8209871dbc5c1c0faeeae3916a29a6802ec284e44588f790fc2ee21b2e667ad2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"Check the reward wallet's balanc\")\n\n        mstore(add(pos, 32), \"e\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8c6481be45433f8a4fa4dba998a6b9df8caf30eb95aa71ca57432c30a0b6c34f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"Check the reward wallet's allowa\")\n\n        mstore(add(pos, 32), \"nce\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$193__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$193_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8209871dbc5c1c0faeeae3916a29a6802ec284e44588f790fc2ee21b2e667ad2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8209871dbc5c1c0faeeae3916a29a6802ec284e44588f790fc2ee21b2e667ad2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8c6481be45433f8a4fa4dba998a6b9df8caf30eb95aa71ca57432c30a0b6c34f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8c6481be45433f8a4fa4dba998a6b9df8caf30eb95aa71ca57432c30a0b6c34f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$193_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC721_$193_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$193_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806347ccca021161007157806347ccca021461017857806370a0823114610196578063a694fc3a146101c6578063be040fb0146101e2578063f7c618c1146101ec578063fb75b2c71461020a576100a9565b806310098ad5146100ae578063150b7a02146100de5780632ce9aead1461010e5780632d6a1fa61461013e5780632e1a7d4d1461015c575b600080fd5b6100c860048036038101906100c39190610d52565b610228565b6040516100d59190611159565b60405180910390f35b6100f860048036038101906100f39190610d7b565b610336565b6040516101059190611088565b60405180910390f35b61012860048036038101906101239190610d52565b610484565b6040516101359190611159565b60405180910390f35b61014661049c565b6040516101539190611159565b60405180910390f35b61017660048036038101906101719190610e24565b6104a2565b005b61018061070e565b60405161018d91906110be565b60405180910390f35b6101b060048036038101906101ab9190610d52565b610732565b6040516101bd9190611159565b60405180910390f35b6101e060048036038101906101db9190610e24565b61074a565b005b6101ea6107e3565b005b6101f4610c60565b60405161020191906110a3565b60405180910390f35b610212610c86565b60405161021f919061100d565b60405180910390f35b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426102769190611266565b905060006201518060035483600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102cc919061120c565b6102d6919061120c565b6102e091906111db565b905080600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461032d9190611185565b92505050919050565b60008461034281610228565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550856004600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061046b90611380565b919050555063150b7a0260e01b91505095945050505050565b60066020528060005260406000206000915090505481565b60035481565b6104aa610cac565b6104b381610228565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610542610cac565b73ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d9906110f9565b60405180910390fd5b6004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560056000610624610cac565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061066f90611356565b919050555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd306106b9610cac565b856040518463ffffffff1660e01b81526004016106d893929190611051565b600060405180830381600087803b1580156106f257600080fd5b505af1158015610706573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e61078e610cac565b30846040518463ffffffff1660e01b81526004016107ae93929190611051565b600060405180830381600087803b1580156107c857600080fd5b505af11580156107dc573d6000803e3d6000fd5b5050505050565b6107eb610cac565b6107f481610228565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600060076000610889610cac565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610909576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610900906110d9565b60405180910390fd5b600060076000610917610cac565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b81526004016109d6929190611028565b60206040518083038186803b1580156109ee57600080fd5b505afa158015610a02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a269190610e4d565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610aa7919061100d565b60206040518083038186803b158015610abf57600080fd5b505afa158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af79190610e4d565b905082821015610b3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3390611139565b60405180910390fd5b82811015610b7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7690611119565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610be8610cac565b866040518463ffffffff1660e01b8152600401610c0793929190611051565b602060405180830381600087803b158015610c2157600080fd5b505af1158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c599190610dfb565b5050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600081359050610cc381611427565b92915050565b600081519050610cd88161143e565b92915050565b60008083601f840112610cf057600080fd5b8235905067ffffffffffffffff811115610d0957600080fd5b602083019150836001820283011115610d2157600080fd5b9250929050565b600081359050610d3781611455565b92915050565b600081519050610d4c81611455565b92915050565b600060208284031215610d6457600080fd5b6000610d7284828501610cb4565b91505092915050565b600080600080600060808688031215610d9357600080fd5b6000610da188828901610cb4565b9550506020610db288828901610cb4565b9450506040610dc388828901610d28565b935050606086013567ffffffffffffffff811115610de057600080fd5b610dec88828901610cde565b92509250509295509295909350565b600060208284031215610e0d57600080fd5b6000610e1b84828501610cc9565b91505092915050565b600060208284031215610e3657600080fd5b6000610e4484828501610d28565b91505092915050565b600060208284031215610e5f57600080fd5b6000610e6d84828501610d3d565b91505092915050565b610e7f8161129a565b82525050565b610e8e816112b8565b82525050565b610e9d8161130e565b82525050565b610eac81611332565b82525050565b6000610ebf601183611174565b91507f4e6f7468696e6720746f2072656465656d0000000000000000000000000000006000830152602082019050919050565b6000610eff601483611174565b91507f546f6b656e206973206e6f74207374616b65642e0000000000000000000000006000830152602082019050919050565b6000610f3f602183611174565b91507f436865636b20746865207265776172642077616c6c657427732062616c616e6360008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fa5602383611174565b91507f436865636b20746865207265776172642077616c6c6574277320616c6c6f776160008301527f6e636500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61100781611304565b82525050565b60006020820190506110226000830184610e76565b92915050565b600060408201905061103d6000830185610e76565b61104a6020830184610e76565b9392505050565b60006060820190506110666000830186610e76565b6110736020830185610e76565b6110806040830184610ffe565b949350505050565b600060208201905061109d6000830184610e85565b92915050565b60006020820190506110b86000830184610e94565b92915050565b60006020820190506110d36000830184610ea3565b92915050565b600060208201905081810360008301526110f281610eb2565b9050919050565b6000602082019050818103600083015261111281610ef2565b9050919050565b6000602082019050818103600083015261113281610f32565b9050919050565b6000602082019050818103600083015261115281610f98565b9050919050565b600060208201905061116e6000830184610ffe565b92915050565b600082825260208201905092915050565b600061119082611304565b915061119b83611304565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111d0576111cf6113c9565b5b828201905092915050565b60006111e682611304565b91506111f183611304565b925082611201576112006113f8565b5b828204905092915050565b600061121782611304565b915061122283611304565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561125b5761125a6113c9565b5b828202905092915050565b600061127182611304565b915061127c83611304565b92508282101561128f5761128e6113c9565b5b828203905092915050565b60006112a5826112e4565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061131982611320565b9050919050565b600061132b826112e4565b9050919050565b600061133d82611344565b9050919050565b600061134f826112e4565b9050919050565b600061136182611304565b91506000821415611375576113746113c9565b5b600182039050919050565b600061138b82611304565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113be576113bd6113c9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6114308161129a565b811461143b57600080fd5b50565b611447816112ac565b811461145257600080fd5b50565b61145e81611304565b811461146957600080fd5b5056fea26469706673582212203865043a7063c5ea1998ff90778c50cb4f6f68298bf256fc5dff4d8bbae24d1464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xBE040FB0 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xFB75B2C7 EQ PUSH2 0x20A JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x10098AD5 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x2CE9AEAD EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x2D6A1FA6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xE24 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x7E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH2 0xC86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x15180 PUSH1 0x3 SLOAD DUP4 PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x342 DUP2 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x46B SWAP1 PUSH2 0x1380 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4AA PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x4B3 DUP2 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x542 PUSH2 0xCAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D9 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x5 PUSH1 0x0 PUSH2 0x624 PUSH2 0xCAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x66F SWAP1 PUSH2 0x1356 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH2 0x6B9 PUSH2 0xCAC JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x706 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH2 0x78E PUSH2 0xCAC JUMP JUMPDEST ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7EB PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x228 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x889 PUSH2 0xCAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x900 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x917 PUSH2 0xCAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D6 SWAP3 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA26 SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP2 SWAP1 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0xE4D JUMP JUMPDEST SWAP1 POP DUP3 DUP3 LT ISZERO PUSH2 0xB3C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB33 SWAP1 PUSH2 0x1139 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB76 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE8 PUSH2 0xCAC JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC07 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC59 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCC3 DUP2 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCD8 DUP2 PUSH2 0x143E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD37 DUP2 PUSH2 0x1455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4C DUP2 PUSH2 0x1455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD72 DUP5 DUP3 DUP6 ADD PUSH2 0xCB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDA1 DUP9 DUP3 DUP10 ADD PUSH2 0xCB4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xDB2 DUP9 DUP3 DUP10 ADD PUSH2 0xCB4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xDC3 DUP9 DUP3 DUP10 ADD PUSH2 0xD28 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDEC DUP9 DUP3 DUP10 ADD PUSH2 0xCDE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE1B DUP5 DUP3 DUP6 ADD PUSH2 0xCC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE44 DUP5 DUP3 DUP6 ADD PUSH2 0xD28 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE6D DUP5 DUP3 DUP6 ADD PUSH2 0xD3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE7F DUP2 PUSH2 0x129A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE8E DUP2 PUSH2 0x12B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE9D DUP2 PUSH2 0x130E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0x1332 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEBF PUSH1 0x11 DUP4 PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7468696E6720746F2072656465656D000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFF PUSH1 0x14 DUP4 PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E206973206E6F74207374616B65642E000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x21 DUP4 PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP PUSH32 0x436865636B20746865207265776172642077616C6C657427732062616C616E63 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA5 PUSH1 0x23 DUP4 PUSH2 0x1174 JUMP JUMPDEST SWAP2 POP PUSH32 0x436865636B20746865207265776172642077616C6C6574277320616C6C6F7761 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6E63650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1022 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x103D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x104A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE76 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1066 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x1073 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE76 JUMP JUMPDEST PUSH2 0x1080 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFFE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F2 DUP2 PUSH2 0xEB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1112 DUP2 PUSH2 0xEF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1132 DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1152 DUP2 PUSH2 0xF98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1190 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH2 0x119B DUP4 PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11CF PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E6 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F1 DUP4 PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1201 JUMPI PUSH2 0x1200 PUSH2 0x13F8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1217 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH2 0x1222 DUP4 PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x125B JUMPI PUSH2 0x125A PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1271 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH2 0x127C DUP4 PUSH2 0x1304 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x128F JUMPI PUSH2 0x128E PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A5 DUP3 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1319 DUP3 PUSH2 0x1320 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132B DUP3 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133D DUP3 PUSH2 0x1344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134F DUP3 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1361 DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1375 JUMPI PUSH2 0x1374 PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138B DUP3 PUSH2 0x1304 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x13BE JUMPI PUSH2 0x13BD PUSH2 0x13C9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1430 DUP2 PUSH2 0x129A JUMP JUMPDEST DUP2 EQ PUSH2 0x143B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1447 DUP2 PUSH2 0x12AC JUMP JUMPDEST DUP2 EQ PUSH2 0x1452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x145E DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP2 EQ PUSH2 0x1469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE PUSH6 0x43A7063C5EA NOT SWAP9 SELFDESTRUCT SWAP1 PUSH24 0x8C50CB4F6F68298BF256FC5DFF4D8BBAE24D1464736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "2362:3187:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3671:309;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5238:308;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2666:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2516:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4308:294;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2425:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2615:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4076:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4677:550;;;:::i;:::-;;2450:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2482:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3671:309;3728:7;3748:19;3788:14;:23;3803:7;3788:23;;;;;;;;;;;;;;;;3770:15;:41;;;;:::i;:::-;3748:63;;3822:14;3925:5;3901:20;;3874:11;3840:9;:18;3850:7;3840:18;;;;;;;;;;;;;;;;:45;;;;:::i;:::-;:81;;;;:::i;:::-;3839:91;;;;:::i;:::-;3822:108;;3966:6;3948;:15;3955:7;3948:15;;;;;;;;;;;;;;;;:24;;;;:::i;:::-;3941:31;;;;3671:309;;;:::o;5238:308::-;5404:6;5389:4;3450:18;3460:7;3450:9;:18::i;:::-;3432:6;:15;3439:7;3432:15;;;;;;;;;;;;;;;:36;;;;3505:15;3479:14;:23;3494:7;3479:23;;;;;;;;;;;;;;;:41;;;;5447:4:::1;5423:12;:21;5436:7;5423:21;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;5462:9;:15;5472:4;5462:15;;;;;;;;;;;;;;;;:17;;;;;;;;;:::i;:::-;;;;;;5497:41;;;5490:48;;5238:308:::0;;;;;;;;:::o;2666:49::-;;;;;;;;;;;;;;;;;:::o;2516:35::-;;;;:::o;4308:294::-;4359:12;:10;:12::i;:::-;3450:18;3460:7;3450:9;:18::i;:::-;3432:6;:15;3439:7;3432:15;;;;;;;;;;;;;;;:36;;;;3505:15;3479:14;:23;3494:7;3479:23;;;;;;;;;;;;;;;:41;;;;4417:12:::1;:10;:12::i;:::-;4392:37;;:12;:21;4405:7;4392:21;;;;;;;;;;;;;;;;;;;;;:37;;;4384:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4472:12;:21;4485:7;4472:21;;;;;;;;;;;;4465:28;;;;;;;;;;;4504:9;:23;4514:12;:10;:12::i;:::-;4504:23;;;;;;;;;;;;;;;;:25;;;;;;;;;:::i;:::-;;;;;;4540:3;::::0;::::1;;;;;;;;:16;;;4565:4;4572:12;:10;:12::i;:::-;4586:7;4540:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4308:294:::0;;:::o;2425:18::-;;;;;;;;;;;;:::o;2615:44::-;;;;;;;;;;;;;;;;;:::o;4076:118::-;4128:3;;;;;;;;;;:20;;;4149:12;:10;:12::i;:::-;4171:4;4178:7;4128:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4076:118;:::o;4677:550::-;4711:12;:10;:12::i;:::-;3450:18;3460:7;3450:9;:18::i;:::-;3432:6;:15;3439:7;3432:15;;;;;;;;;;;;;;;:36;;;;3505:15;3479:14;:23;3494:7;3479:23;;;;;;;;;;;;;;;:41;;;;4732:14:::1;4749:6;:20;4756:12;:10;:12::i;:::-;4749:20;;;;;;;;;;;;;;;;4732:37;;4793:1;4784:6;:10;4776:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;4846:1;4823:6;:20;4830:12;:10;:12::i;:::-;4823:20;;;;;;;;;;;;;;;:24;;;;4856:17;4876:11;;;;;;;;;;;:21;;;4898:12;;;;;;;;;;;4920:4;4876:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4856:70;;4933:27;4963:11;;;;;;;;;;;:21;;;4985:12;;;;;;;;;;;4963:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4933:65;;5026:6;5013:9;:19;;5005:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5110:6;5087:19;:29;;5079:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5163:11;;;;;;;;;;;:24;;;5188:12;;;;;;;;;;;5202;:10;:12::i;:::-;5216:6;5163:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3531:1;;;4677:550:::0;:::o;2450:25::-;;;;;;;;;;;;;:::o;2482:27::-;;;;;;;;;;;;;:::o;1912:96:3:-;1965:7;1991:10;1984:17;;1912:96;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;308:351::-;;;425:3;418:4;410:6;406:17;402:27;392:2;;443:1;440;433:12;392:2;479:6;466:20;456:30;;509:18;501:6;498:30;495:2;;;541:1;538;531:12;495:2;578:4;570:6;566:17;554:29;;632:3;624:4;616:6;612:17;602:8;598:32;595:41;592:2;;;649:1;646;639:12;592:2;382:277;;;;;:::o;665:139::-;;749:6;736:20;727:29;;765:33;792:5;765:33;:::i;:::-;717:87;;;;:::o;810:143::-;;898:6;892:13;883:22;;914:33;941:5;914:33;:::i;:::-;873:80;;;;:::o;959:262::-;;1067:2;1055:9;1046:7;1042:23;1038:32;1035:2;;;1083:1;1080;1073:12;1035:2;1126:1;1151:53;1196:7;1187:6;1176:9;1172:22;1151:53;:::i;:::-;1141:63;;1097:117;1025:196;;;;:::o;1227:829::-;;;;;;1405:3;1393:9;1384:7;1380:23;1376:33;1373:2;;;1422:1;1419;1412:12;1373:2;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1876:2;1865:9;1861:18;1848:32;1907:18;1899:6;1896:30;1893:2;;;1939:1;1936;1929:12;1893:2;1975:64;2031:7;2022:6;2011:9;2007:22;1975:64;:::i;:::-;1957:82;;;;1819:230;1363:693;;;;;;;;:::o;2062:278::-;;2178:2;2166:9;2157:7;2153:23;2149:32;2146:2;;;2194:1;2191;2184:12;2146:2;2237:1;2262:61;2315:7;2306:6;2295:9;2291:22;2262:61;:::i;:::-;2252:71;;2208:125;2136:204;;;;:::o;2346:262::-;;2454:2;2442:9;2433:7;2429:23;2425:32;2422:2;;;2470:1;2467;2460:12;2422:2;2513:1;2538:53;2583:7;2574:6;2563:9;2559:22;2538:53;:::i;:::-;2528:63;;2484:117;2412:196;;;;:::o;2614:284::-;;2733:2;2721:9;2712:7;2708:23;2704:32;2701:2;;;2749:1;2746;2739:12;2701:2;2792:1;2817:64;2873:7;2864:6;2853:9;2849:22;2817:64;:::i;:::-;2807:74;;2763:128;2691:207;;;;:::o;2904:118::-;2991:24;3009:5;2991:24;:::i;:::-;2986:3;2979:37;2969:53;;:::o;3028:115::-;3113:23;3130:5;3113:23;:::i;:::-;3108:3;3101:36;3091:52;;:::o;3149:157::-;3249:50;3293:5;3249:50;:::i;:::-;3244:3;3237:63;3227:79;;:::o;3312:161::-;3414:52;3460:5;3414:52;:::i;:::-;3409:3;3402:65;3392:81;;:::o;3479:315::-;;3642:67;3706:2;3701:3;3642:67;:::i;:::-;3635:74;;3739:19;3735:1;3730:3;3726:11;3719:40;3785:2;3780:3;3776:12;3769:19;;3625:169;;;:::o;3800:318::-;;3963:67;4027:2;4022:3;3963:67;:::i;:::-;3956:74;;4060:22;4056:1;4051:3;4047:11;4040:43;4109:2;4104:3;4100:12;4093:19;;3946:172;;;:::o;4124:365::-;;4287:67;4351:2;4346:3;4287:67;:::i;:::-;4280:74;;4384:34;4380:1;4375:3;4371:11;4364:55;4450:3;4445:2;4440:3;4436:12;4429:25;4480:2;4475:3;4471:12;4464:19;;4270:219;;;:::o;4495:367::-;;4658:67;4722:2;4717:3;4658:67;:::i;:::-;4651:74;;4755:34;4751:1;4746:3;4742:11;4735:55;4821:5;4816:2;4811:3;4807:12;4800:27;4853:2;4848:3;4844:12;4837:19;;4641:221;;;:::o;4868:118::-;4955:24;4973:5;4955:24;:::i;:::-;4950:3;4943:37;4933:53;;:::o;4992:222::-;;5123:2;5112:9;5108:18;5100:26;;5136:71;5204:1;5193:9;5189:17;5180:6;5136:71;:::i;:::-;5090:124;;;;:::o;5220:332::-;;5379:2;5368:9;5364:18;5356:26;;5392:71;5460:1;5449:9;5445:17;5436:6;5392:71;:::i;:::-;5473:72;5541:2;5530:9;5526:18;5517:6;5473:72;:::i;:::-;5346:206;;;;;:::o;5558:442::-;;5745:2;5734:9;5730:18;5722:26;;5758:71;5826:1;5815:9;5811:17;5802:6;5758:71;:::i;:::-;5839:72;5907:2;5896:9;5892:18;5883:6;5839:72;:::i;:::-;5921;5989:2;5978:9;5974:18;5965:6;5921:72;:::i;:::-;5712:288;;;;;;:::o;6006:218::-;;6135:2;6124:9;6120:18;6112:26;;6148:69;6214:1;6203:9;6199:17;6190:6;6148:69;:::i;:::-;6102:122;;;;:::o;6230:248::-;;6374:2;6363:9;6359:18;6351:26;;6387:84;6468:1;6457:9;6453:17;6444:6;6387:84;:::i;:::-;6341:137;;;;:::o;6484:252::-;;6630:2;6619:9;6615:18;6607:26;;6643:86;6726:1;6715:9;6711:17;6702:6;6643:86;:::i;:::-;6597:139;;;;:::o;6742:419::-;;6946:2;6935:9;6931:18;6923:26;;6995:9;6989:4;6985:20;6981:1;6970:9;6966:17;6959:47;7023:131;7149:4;7023:131;:::i;:::-;7015:139;;6913:248;;;:::o;7167:419::-;;7371:2;7360:9;7356:18;7348:26;;7420:9;7414:4;7410:20;7406:1;7395:9;7391:17;7384:47;7448:131;7574:4;7448:131;:::i;:::-;7440:139;;7338:248;;;:::o;7592:419::-;;7796:2;7785:9;7781:18;7773:26;;7845:9;7839:4;7835:20;7831:1;7820:9;7816:17;7809:47;7873:131;7999:4;7873:131;:::i;:::-;7865:139;;7763:248;;;:::o;8017:419::-;;8221:2;8210:9;8206:18;8198:26;;8270:9;8264:4;8260:20;8256:1;8245:9;8241:17;8234:47;8298:131;8424:4;8298:131;:::i;:::-;8290:139;;8188:248;;;:::o;8442:222::-;;8573:2;8562:9;8558:18;8550:26;;8586:71;8654:1;8643:9;8639:17;8630:6;8586:71;:::i;:::-;8540:124;;;;:::o;8670:169::-;;8788:6;8783:3;8776:19;8828:4;8823:3;8819:14;8804:29;;8766:73;;;;:::o;8845:305::-;;8904:20;8922:1;8904:20;:::i;:::-;8899:25;;8938:20;8956:1;8938:20;:::i;:::-;8933:25;;9092:1;9024:66;9020:74;9017:1;9014:81;9011:2;;;9098:18;;:::i;:::-;9011:2;9142:1;9139;9135:9;9128:16;;8889:261;;;;:::o;9156:185::-;;9213:20;9231:1;9213:20;:::i;:::-;9208:25;;9247:20;9265:1;9247:20;:::i;:::-;9242:25;;9286:1;9276:2;;9291:18;;:::i;:::-;9276:2;9333:1;9330;9326:9;9321:14;;9198:143;;;;:::o;9347:348::-;;9410:20;9428:1;9410:20;:::i;:::-;9405:25;;9444:20;9462:1;9444:20;:::i;:::-;9439:25;;9632:1;9564:66;9560:74;9557:1;9554:81;9549:1;9542:9;9535:17;9531:105;9528:2;;;9639:18;;:::i;:::-;9528:2;9687:1;9684;9680:9;9669:20;;9395:300;;;;:::o;9701:191::-;;9761:20;9779:1;9761:20;:::i;:::-;9756:25;;9795:20;9813:1;9795:20;:::i;:::-;9790:25;;9834:1;9831;9828:8;9825:2;;;9839:18;;:::i;:::-;9825:2;9884:1;9881;9877:9;9869:17;;9746:146;;;;:::o;9898:96::-;;9964:24;9982:5;9964:24;:::i;:::-;9953:35;;9943:51;;;:::o;10000:90::-;;10077:5;10070:13;10063:21;10052:32;;10042:48;;;:::o;10096:149::-;;10172:66;10165:5;10161:78;10150:89;;10140:105;;;:::o;10251:126::-;;10328:42;10321:5;10317:54;10306:65;;10296:81;;;:::o;10383:77::-;;10449:5;10438:16;;10428:32;;;:::o;10466:152::-;;10562:50;10606:5;10562:50;:::i;:::-;10549:63;;10539:79;;;:::o;10624:126::-;;10720:24;10738:5;10720:24;:::i;:::-;10707:37;;10697:53;;;:::o;10756:156::-;;10854:52;10900:5;10854:52;:::i;:::-;10841:65;;10831:81;;;:::o;10918:128::-;;11016:24;11034:5;11016:24;:::i;:::-;11003:37;;10993:53;;;:::o;11052:171::-;;11114:24;11132:5;11114:24;:::i;:::-;11105:33;;11160:4;11153:5;11150:15;11147:2;;;11168:18;;:::i;:::-;11147:2;11215:1;11208:5;11204:13;11197:20;;11095:128;;;:::o;11229:233::-;;11291:24;11309:5;11291:24;:::i;:::-;11282:33;;11337:66;11330:5;11327:77;11324:2;;;11407:18;;:::i;:::-;11324:2;11454:1;11447:5;11443:13;11436:20;;11272:190;;;:::o;11468:180::-;11516:77;11513:1;11506:88;11613:4;11610:1;11603:15;11637:4;11634:1;11627:15;11654:180;11702:77;11699:1;11692:88;11799:4;11796:1;11789:15;11823:4;11820:1;11813:15;11840:122;11913:24;11931:5;11913:24;:::i;:::-;11906:5;11903:35;11893:2;;11952:1;11949;11942:12;11893:2;11883:79;:::o;11968:116::-;12038:21;12053:5;12038:21;:::i;:::-;12031:5;12028:32;12018:2;;12074:1;12071;12064:12;12018:2;12008:76;:::o;12090:122::-;12163:24;12181:5;12163:24;:::i;:::-;12156:5;12153:35;12143:2;;12202:1;12199;12192:12;12143:2;12133:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1056400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"available(address)": "infinite",
								"balanceOf(address)": "1536",
								"lastUpdateTime(address)": "1559",
								"nft()": "1254",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"redeem()": "infinite",
								"rewardPerTokenPerDay()": "1196",
								"rewardToken()": "1345",
								"rewardWallet()": "1324",
								"stake(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2362,
									"end": 5549,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3221,
									"end": 3231,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3207,
									"end": 3232,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3264,
									"end": 3282,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3254,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3243,
									"end": 3254,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3243,
									"end": 3283,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3309,
									"end": 3328,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3306,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3294,
									"end": 3306,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3294,
									"end": 3328,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3362,
									"end": 3372,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3339,
									"end": 3359,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3339,
									"end": 3372,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3339,
									"end": 3372,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3339,
									"end": 3372,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3339,
									"end": 3372,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 156,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 475,
									"end": 478,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 463,
									"end": 472,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 454,
									"end": 461,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 450,
									"end": 473,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 446,
									"end": 479,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 492,
									"end": 493,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 489,
									"end": 490,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 494,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 536,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 616,
									"end": 623,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 607,
									"end": 613,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 596,
									"end": 605,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 592,
									"end": 614,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 550,
									"end": 624,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 550,
									"end": 624,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 506,
									"end": 634,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 673,
									"end": 675,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 755,
									"end": 762,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 746,
									"end": 752,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 735,
									"end": 744,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 731,
									"end": 753,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 689,
									"end": 763,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 689,
									"end": 763,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 644,
									"end": 773,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 812,
									"end": 814,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 894,
									"end": 901,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 885,
									"end": 891,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 874,
									"end": 883,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 870,
									"end": 892,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 828,
									"end": 902,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 828,
									"end": 902,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 783,
									"end": 912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 951,
									"end": 953,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1024,
									"end": 1030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1031,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 922,
									"end": 1051,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1148,
									"end": 1153,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1285,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1236,
									"end": 1241,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1232,
									"end": 1286,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1369,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1472,
									"end": 1477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1444,
									"end": 1479,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1490,
									"end": 1491,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1495,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1600,
									"end": 1605,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1580,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1607,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 1619,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1623,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 5549,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203865043a7063c5ea1998ff90778c50cb4f6f68298bf256fc5dff4d8bbae24d1464736f6c63430008000033",
									".code": [
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "47CCCA02"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "47CCCA02"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "BE040FB0"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "F7C618C1"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "FB75B2C7"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "10098AD5"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "2CE9AEAD"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "2D6A1FA6"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 5549,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3748,
											"end": 3767,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3802,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3810,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3811,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3785,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3770,
											"end": 3811,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3770,
											"end": 3811,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3770,
											"end": 3811,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3770,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "15180"
										},
										{
											"begin": 3901,
											"end": 3921,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3901,
											"end": 3921,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3874,
											"end": 3885,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3857,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3840,
											"end": 3885,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3840,
											"end": 3885,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3840,
											"end": 3885,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3840,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3840,
											"end": 3921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3840,
											"end": 3921,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3840,
											"end": 3921,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3840,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3839,
											"end": 3930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3839,
											"end": 3930,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3930,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3839,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3962,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3972,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3980,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3460,
											"end": 3467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3446,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3520,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3501,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5447,
											"end": 5451,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5443,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5471,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5476,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5538,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 5497,
											"end": 5538,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5497,
											"end": 5538,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5490,
											"end": 5538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5490,
											"end": 5538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5238,
											"end": 5546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2715,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2551,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4359,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3460,
											"end": 3467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3446,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3520,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3501,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4417,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4417,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4417,
											"end": 4429,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4417,
											"end": 4429,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4417,
											"end": 4429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4429,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4429,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4404,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4412,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4413,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4429,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4429,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4392,
											"end": 4429,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4384,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4484,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4492,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4493,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4513,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4514,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4556,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4540,
											"end": 4556,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4556,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 4565,
											"end": 4569,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4572,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4602,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2615,
											"end": 2659,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4148,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4148,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4148,
											"name": "PUSH",
											"source": 5,
											"value": "42842E0E"
										},
										{
											"begin": 4149,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4149,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4149,
											"end": 4161,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4149,
											"end": 4161,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4149,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4175,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4178,
											"end": 4185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4076,
											"end": 4194,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4711,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4711,
											"end": 4723,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4711,
											"end": 4723,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4711,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3460,
											"end": 3467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3446,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3520,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3501,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4746,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4756,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4756,
											"end": 4768,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4756,
											"end": 4768,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4756,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4769,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4784,
											"end": 4794,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4776,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4830,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4830,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4830,
											"end": 4842,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4830,
											"end": 4842,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4830,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4847,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4876,
											"end": 4887,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4897,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4876,
											"end": 4897,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4897,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4876,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4933,
											"end": 4960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4984,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4963,
											"end": 4984,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4984,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4985,
											"end": 4997,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4963,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4933,
											"end": 4998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4933,
											"end": 4998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5022,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5032,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5005,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5116,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5079,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5163,
											"end": 5174,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5188,
											"end": 5200,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5202,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5222,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 5227,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2509,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1912,
											"end": 2008,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1912,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 1972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2001,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 2008,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 2008,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 308,
											"end": 659,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 308,
											"end": 659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 659,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 425,
											"end": 428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 418,
											"end": 422,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 410,
											"end": 416,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 406,
											"end": 423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 429,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 392,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 392,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 479,
											"end": 485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 466,
											"end": 486,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 456,
											"end": 486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 498,
											"end": 528,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 495,
											"end": 497,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 495,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 495,
											"end": 497,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 539,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 531,
											"end": 543,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 495,
											"end": 497,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 495,
											"end": 497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 578,
											"end": 582,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 576,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 566,
											"end": 583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 554,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 554,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 624,
											"end": 628,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 616,
											"end": 622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 612,
											"end": 629,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 602,
											"end": 610,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 598,
											"end": 630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 595,
											"end": 636,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 592,
											"end": 594,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 592,
											"end": 594,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 649,
											"end": 650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 639,
											"end": 651,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 592,
											"end": 594,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 592,
											"end": 594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 382,
											"end": 659,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 382,
											"end": 659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 382,
											"end": 659,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 382,
											"end": 659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 382,
											"end": 659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 382,
											"end": 659,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 665,
											"end": 804,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 665,
											"end": 804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 736,
											"end": 756,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 727,
											"end": 756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 727,
											"end": 756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 765,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 792,
											"end": 797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 765,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 765,
											"end": 798,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 798,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 765,
											"end": 798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 717,
											"end": 804,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 717,
											"end": 804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 717,
											"end": 804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 717,
											"end": 804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 717,
											"end": 804,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 810,
											"end": 953,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 810,
											"end": 953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 810,
											"end": 953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 892,
											"end": 905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 883,
											"end": 905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 883,
											"end": 905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 914,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 914,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 914,
											"end": 947,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 914,
											"end": 947,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 914,
											"end": 947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 873,
											"end": 953,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 873,
											"end": 953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 873,
											"end": 953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 873,
											"end": 953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 873,
											"end": 953,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 1221,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 959,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1053,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1065,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1070,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1083,
											"end": 1084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1085,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1035,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1196,
											"end": 1203,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1185,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1172,
											"end": 1194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1151,
											"end": 1204,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1151,
											"end": 1204,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1151,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1221,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1221,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1227,
											"end": 2056,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1227,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 2056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 2056,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 2056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 2056,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 2056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1403,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1376,
											"end": 1409,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1865,
											"end": 1874,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1880,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1926,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1895,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1893,
											"end": 1895,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1893,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1975,
											"end": 2039,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2039,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1975,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2039,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2039,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2039,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 2049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 2056,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 2056,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 2056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 2056,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 2056,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 2056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 2056,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 2056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 2056,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2062,
											"end": 2340,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2062,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2181,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2196,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2146,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2315,
											"end": 2322,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2262,
											"end": 2323,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2262,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2262,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2323,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2340,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2340,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2346,
											"end": 2608,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2346,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2456,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2440,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2452,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2457,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2422,
											"end": 2424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2424,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2422,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2583,
											"end": 2590,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2538,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2608,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2608,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2614,
											"end": 2898,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2614,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2719,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2731,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2704,
											"end": 2736,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2747,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2751,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2873,
											"end": 2880,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2862,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2817,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2817,
											"end": 2881,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 2881,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2817,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2898,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2898,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2898,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2904,
											"end": 3022,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2904,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2991,
											"end": 3015,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2991,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 2989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3022,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3028,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3028,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3130,
											"end": 3135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3143,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3149,
											"end": 3306,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3149,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3293,
											"end": 3298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3249,
											"end": 3299,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3249,
											"end": 3299,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3249,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3300,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3306,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3312,
											"end": 3473,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3312,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3460,
											"end": 3465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3414,
											"end": 3466,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3414,
											"end": 3466,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3414,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3467,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3473,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3479,
											"end": 3794,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3479,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3706,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3701,
											"end": 3704,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3642,
											"end": 3709,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3642,
											"end": 3709,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3642,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3739,
											"end": 3758,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7468696E6720746F2072656465656D000000000000000000000000000000"
										},
										{
											"begin": 3735,
											"end": 3736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3726,
											"end": 3737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3759,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3794,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3625,
											"end": 3794,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3800,
											"end": 4118,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3800,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 4118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4022,
											"end": 4025,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3963,
											"end": 4030,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3963,
											"end": 4030,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3963,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 4030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3956,
											"end": 4030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4082,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E206973206E6F74207374616B65642E000000000000000000000000"
										},
										{
											"begin": 4056,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4054,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4047,
											"end": 4058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4111,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4118,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4124,
											"end": 4489,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4124,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4124,
											"end": 4489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 4346,
											"end": 4349,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4287,
											"end": 4354,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4287,
											"end": 4354,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4287,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4418,
											"name": "PUSH",
											"source": 6,
											"value": "436865636B20746865207265776172642077616C6C657427732062616C616E63"
										},
										{
											"begin": 4380,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4378,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4364,
											"end": 4419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4453,
											"name": "PUSH",
											"source": 6,
											"value": "6500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4443,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4429,
											"end": 4454,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4475,
											"end": 4478,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4489,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4489,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4495,
											"end": 4862,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4495,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4495,
											"end": 4862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4717,
											"end": 4720,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4658,
											"end": 4725,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4658,
											"end": 4725,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4658,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4725,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4755,
											"end": 4789,
											"name": "PUSH",
											"source": 6,
											"value": "436865636B20746865207265776172642077616C6C6574277320616C6C6F7761"
										},
										{
											"begin": 4751,
											"end": 4752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "PUSH",
											"source": 6,
											"value": "6E63650000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4827,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4848,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4844,
											"end": 4856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4862,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4868,
											"end": 4986,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4868,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4973,
											"end": 4978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4980,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4986,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4992,
											"end": 5214,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4992,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4992,
											"end": 5214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5125,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5112,
											"end": 5121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5100,
											"end": 5126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5100,
											"end": 5126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5136,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5204,
											"end": 5205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5202,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5136,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5136,
											"end": 5207,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5136,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5214,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5214,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5220,
											"end": 5552,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5220,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5381,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5442,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5392,
											"end": 5463,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5392,
											"end": 5463,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5392,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5523,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5473,
											"end": 5545,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5473,
											"end": 5545,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5473,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5552,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5552,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5552,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5558,
											"end": 6000,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5558,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5558,
											"end": 6000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5747,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5758,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5826,
											"end": 5827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5824,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5802,
											"end": 5808,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5758,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5758,
											"end": 5829,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5758,
											"end": 5829,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5758,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5839,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5907,
											"end": 5909,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5905,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5839,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5839,
											"end": 5911,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5839,
											"end": 5911,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5839,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5921,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5989,
											"end": 5991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5978,
											"end": 5987,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 5992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5965,
											"end": 5971,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5921,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5921,
											"end": 5993,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5921,
											"end": 5993,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5921,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 6000,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 6000,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 6000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 6000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 6000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 6000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 6000,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6006,
											"end": 6224,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6006,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6006,
											"end": 6224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6135,
											"end": 6137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6124,
											"end": 6133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6148,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6214,
											"end": 6215,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6212,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6190,
											"end": 6196,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6148,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6148,
											"end": 6217,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6148,
											"end": 6217,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6148,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6224,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6224,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6230,
											"end": 6478,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 6230,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6230,
											"end": 6478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6376,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6387,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6468,
											"end": 6469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6387,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6387,
											"end": 6471,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6387,
											"end": 6471,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6387,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6478,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6478,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6484,
											"end": 6736,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6484,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6632,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6619,
											"end": 6628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 6726,
											"end": 6727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6724,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6702,
											"end": 6708,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6643,
											"end": 6729,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6643,
											"end": 6729,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 6643,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6736,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6736,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6742,
											"end": 7161,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 6742,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6742,
											"end": 7161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 6948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6935,
											"end": 6944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6923,
											"end": 6949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6923,
											"end": 6949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6989,
											"end": 6993,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6985,
											"end": 7005,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6966,
											"end": 6983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7023,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 7161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 7161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 7161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 7161,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7167,
											"end": 7586,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 7167,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7167,
											"end": 7586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7373,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7360,
											"end": 7369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7420,
											"end": 7429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7414,
											"end": 7418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7430,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7406,
											"end": 7407,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7391,
											"end": 7408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7384,
											"end": 7431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7574,
											"end": 7578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7448,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7586,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7592,
											"end": 8011,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 7592,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7592,
											"end": 8011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7796,
											"end": 7798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7785,
											"end": 7794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 7854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7831,
											"end": 7832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7816,
											"end": 7833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7809,
											"end": 7856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7999,
											"end": 8003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7873,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7865,
											"end": 8004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7865,
											"end": 8004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 8011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 8011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 8011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 8011,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8223,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8210,
											"end": 8219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8198,
											"end": 8224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8198,
											"end": 8224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8270,
											"end": 8279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8264,
											"end": 8268,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8280,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8254,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8241,
											"end": 8258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 8424,
											"end": 8428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8436,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8442,
											"end": 8664,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8442,
											"end": 8664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8562,
											"end": 8571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8558,
											"end": 8576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8550,
											"end": 8576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8550,
											"end": 8576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8586,
											"end": 8657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 8654,
											"end": 8655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8636,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8586,
											"end": 8657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8586,
											"end": 8657,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8586,
											"end": 8657,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 8586,
											"end": 8657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8664,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8664,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8664,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8670,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8670,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8783,
											"end": 8786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8776,
											"end": 8795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8828,
											"end": 8832,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8819,
											"end": 8833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8804,
											"end": 8833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8804,
											"end": 8833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 8839,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 8839,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 8839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 8839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 8839,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8845,
											"end": 9150,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 8845,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8845,
											"end": 9150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8904,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8922,
											"end": 8923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8904,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8904,
											"end": 8924,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8904,
											"end": 8924,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8904,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8933,
											"end": 8958,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8933,
											"end": 8958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9092,
											"end": 9093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9090,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9020,
											"end": 9094,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9014,
											"end": 9095,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9139,
											"end": 9140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9135,
											"end": 9144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9128,
											"end": 9144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9128,
											"end": 9144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8889,
											"end": 9150,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8889,
											"end": 9150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8889,
											"end": 9150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8889,
											"end": 9150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8889,
											"end": 9150,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9156,
											"end": 9341,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 9156,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9156,
											"end": 9341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 9231,
											"end": 9232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9213,
											"end": 9233,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9213,
											"end": 9233,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 9213,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9233,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9265,
											"end": 9266,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9247,
											"end": 9267,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9247,
											"end": 9267,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9247,
											"end": 9267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9242,
											"end": 9267,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9242,
											"end": 9267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9286,
											"end": 9287,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 9276,
											"end": 9278,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 9291,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 9291,
											"end": 9309,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9291,
											"end": 9309,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 9291,
											"end": 9309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9276,
											"end": 9278,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 9276,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9333,
											"end": 9334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9330,
											"end": 9331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9326,
											"end": 9335,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9341,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9341,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9347,
											"end": 9695,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 9347,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9347,
											"end": 9695,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9428,
											"end": 9429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 9410,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9462,
											"end": 9463,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9444,
											"end": 9464,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9444,
											"end": 9464,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9444,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9464,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9632,
											"end": 9633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9564,
											"end": 9630,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9560,
											"end": 9634,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9557,
											"end": 9558,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9554,
											"end": 9635,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9542,
											"end": 9551,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9535,
											"end": 9552,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9531,
											"end": 9636,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9530,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9528,
											"end": 9530,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9639,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 9639,
											"end": 9657,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9639,
											"end": 9657,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9639,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9530,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9528,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9687,
											"end": 9688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9684,
											"end": 9685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9680,
											"end": 9689,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9669,
											"end": 9689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9669,
											"end": 9689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9395,
											"end": 9695,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9395,
											"end": 9695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9395,
											"end": 9695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9395,
											"end": 9695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9395,
											"end": 9695,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9701,
											"end": 9892,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 9701,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9761,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 9779,
											"end": 9780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9761,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9761,
											"end": 9781,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9761,
											"end": 9781,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 9761,
											"end": 9781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9756,
											"end": 9781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9756,
											"end": 9781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9795,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 9813,
											"end": 9814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9795,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9795,
											"end": 9815,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9795,
											"end": 9815,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 9795,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9790,
											"end": 9815,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9790,
											"end": 9815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9831,
											"end": 9832,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9828,
											"end": 9836,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9839,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9881,
											"end": 9882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9877,
											"end": 9886,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9869,
											"end": 9886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9869,
											"end": 9886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9892,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9898,
											"end": 9994,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 9898,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9898,
											"end": 9994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9982,
											"end": 9987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9964,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 9964,
											"end": 9988,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9964,
											"end": 9988,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9964,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 9988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 9988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9943,
											"end": 9994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9943,
											"end": 9994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9943,
											"end": 9994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9943,
											"end": 9994,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10000,
											"end": 10090,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 10000,
											"end": 10090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10000,
											"end": 10090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10083,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10063,
											"end": 10084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10090,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10096,
											"end": 10245,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 10096,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10096,
											"end": 10245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10238,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10165,
											"end": 10170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10161,
											"end": 10239,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10150,
											"end": 10239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10150,
											"end": 10239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10140,
											"end": 10245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10140,
											"end": 10245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10140,
											"end": 10245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10140,
											"end": 10245,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10251,
											"end": 10377,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10251,
											"end": 10377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10251,
											"end": 10377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10328,
											"end": 10370,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10321,
											"end": 10326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10317,
											"end": 10371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 10371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 10371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10296,
											"end": 10377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10296,
											"end": 10377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10296,
											"end": 10377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10296,
											"end": 10377,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10383,
											"end": 10460,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10383,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10383,
											"end": 10460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10449,
											"end": 10454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10438,
											"end": 10454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10438,
											"end": 10454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10428,
											"end": 10460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10428,
											"end": 10460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10428,
											"end": 10460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10428,
											"end": 10460,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10466,
											"end": 10618,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 10466,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10562,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 10606,
											"end": 10611,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10562,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10562,
											"end": 10612,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10562,
											"end": 10612,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 10562,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10618,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10624,
											"end": 10750,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10624,
											"end": 10750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10624,
											"end": 10750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10720,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 10738,
											"end": 10743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10720,
											"end": 10744,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10720,
											"end": 10744,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 10720,
											"end": 10744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10707,
											"end": 10744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10707,
											"end": 10744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10750,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10756,
											"end": 10912,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 10756,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10756,
											"end": 10912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10854,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10900,
											"end": 10905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10854,
											"end": 10906,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10854,
											"end": 10906,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10854,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 10906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10841,
											"end": 10906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10831,
											"end": 10912,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10831,
											"end": 10912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10831,
											"end": 10912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10831,
											"end": 10912,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10918,
											"end": 11046,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10918,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 11046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11016,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 11034,
											"end": 11039,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11016,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 11016,
											"end": 11040,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11016,
											"end": 11040,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 11016,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11003,
											"end": 11040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11003,
											"end": 11040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10993,
											"end": 11046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10993,
											"end": 11046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10993,
											"end": 11046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10993,
											"end": 11046,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11052,
											"end": 11223,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 11052,
											"end": 11223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11052,
											"end": 11223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11132,
											"end": 11137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 11114,
											"end": 11138,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11114,
											"end": 11138,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11114,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11149,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 11147,
											"end": 11149,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 11168,
											"end": 11186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 11168,
											"end": 11186,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11168,
											"end": 11186,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 11168,
											"end": 11186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11149,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 11147,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11215,
											"end": 11216,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11208,
											"end": 11213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11204,
											"end": 11217,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11223,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11229,
											"end": 11462,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 11229,
											"end": 11462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11291,
											"end": 11315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 11309,
											"end": 11314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11291,
											"end": 11315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 11291,
											"end": 11315,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11291,
											"end": 11315,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 11291,
											"end": 11315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11403,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11330,
											"end": 11335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11327,
											"end": 11404,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11324,
											"end": 11326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11324,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 11324,
											"end": 11326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11407,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11407,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 11407,
											"end": 11425,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11407,
											"end": 11425,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11407,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11324,
											"end": 11326,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 11324,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11454,
											"end": 11455,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11447,
											"end": 11452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11443,
											"end": 11456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11462,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11468,
											"end": 11648,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 11468,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11516,
											"end": 11593,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11513,
											"end": 11514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11506,
											"end": 11594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11613,
											"end": 11617,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 11610,
											"end": 11611,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11603,
											"end": 11618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11641,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11634,
											"end": 11635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11627,
											"end": 11642,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11654,
											"end": 11834,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 11654,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11702,
											"end": 11779,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11699,
											"end": 11700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11692,
											"end": 11780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11799,
											"end": 11803,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11796,
											"end": 11797,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11789,
											"end": 11804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11823,
											"end": 11827,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11813,
											"end": 11828,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11840,
											"end": 11962,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 11840,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 11931,
											"end": 11936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11913,
											"end": 11937,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11913,
											"end": 11937,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 11913,
											"end": 11937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11906,
											"end": 11911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 11938,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11893,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 11893,
											"end": 11895,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11952,
											"end": 11953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11949,
											"end": 11950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11942,
											"end": 11954,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11893,
											"end": 11895,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 11893,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11883,
											"end": 11962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11883,
											"end": 11962,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11968,
											"end": 12084,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 11968,
											"end": 12084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 12053,
											"end": 12058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 12038,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12031,
											"end": 12036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12028,
											"end": 12060,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12018,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 12018,
											"end": 12020,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12074,
											"end": 12075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12071,
											"end": 12072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12064,
											"end": 12076,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12018,
											"end": 12020,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 12018,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12008,
											"end": 12084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12008,
											"end": 12084,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12090,
											"end": 12212,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 12090,
											"end": 12212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12163,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 12181,
											"end": 12186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12163,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 12163,
											"end": 12187,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12163,
											"end": 12187,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 12163,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12153,
											"end": 12188,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12143,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 12143,
											"end": 12145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12202,
											"end": 12203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12199,
											"end": 12200,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12192,
											"end": 12204,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12143,
											"end": 12145,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 12143,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12133,
											"end": 12212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12133,
											"end": 12212,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"available(address)": "10098ad5",
							"balanceOf(address)": "70a08231",
							"lastUpdateTime(address)": "2ce9aead",
							"nft()": "47ccca02",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"redeem()": "be040fb0",
							"rewardPerTokenPerDay()": "2d6a1fa6",
							"rewardToken()": "f7c618c1",
							"rewardWallet()": "fb75b2c7",
							"stake(uint256)": "a694fc3a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardWalletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Breakthrough Labs Inc.\",\"details\":\"NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate, and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT rate stays the same even when the number of staked NFTs increases/decreases. A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day.\",\"kind\":\"dev\",\"methods\":{\"available(address)\":{\"details\":\"returns the number of reward tokens available for an address\",\"params\":{\"account\":\"account\"}},\"constructor\":{\"params\":{\"nftAddress\":\"Staked NFT Address\",\"rewardRate\":\"# of tokens per staked NFT per day | precision:18\",\"rewardTokenAddress\":\"Reward Token Address\",\"rewardWalletAddress\":\"Wallet that holds rewards to be paid out\"}},\"redeem()\":{\"details\":\"redeems all of a user's reward tokens.\"},\"stake(uint256)\":{\"details\":\"stakes a specific tokenID\",\"params\":{\"tokenId\":\"tokenId\"}},\"withdraw(uint256)\":{\"details\":\"withdraws a token from the staking contract\",\"params\":{\"tokenId\":\"tokenId\"}}},\"title\":\"NFT Staking with Infinite Rewards\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Staking, NFT, ERC721\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":\"NFTStakingPerToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c3594de8c76bcbcca23da7404be3d6a37ccf5aa180131a4e1ec6061c5ae9a4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de1e3982bb9eab077edb88d0713b198144cf92cb026b7861f013dd4e2dceda37\",\"dweb:/ipfs/QmT2fDWiXWTS1inFZHKHNqBYk6wEnvRBaMs3Bv8pUea3cS\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xd8eb2b2b53d69c8aa57361d6537ae021a7cd871bd95fedc5112800779adce272\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348281480b60313dcfef92f916c5811f455032f4e6b00f5aa23c1b1456e093b4\",\"dweb:/ipfs/QmUQ2D5TCeqLpeqUKKp4ecVmMq4Duuwr5e2MPB2q4i3SnZ\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x6cba82b4ead8a759faa8fa9780dbd4d773e85a4f58b691b385fe01f5e8851e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dab56a044b51452b613f1fe11154d2316a46135af82bd0c6518e3c66be95de5\",\"dweb:/ipfs/QmPN7H9E4w1YoYHfhbqsSHi8qJME5ops24EcbkUAciqsyc\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xc42291a7c5f437f1ffa8493e6be66d5310dffac8f90caa96a8bff68c51e56d9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72808a4108b4352382d530f6d9f71a836223ab4017249ce4e3d1d9689dba0e8a\",\"dweb:/ipfs/QmQ75ByNcZko5Ym14mk4WrcM9Wrpqo18tjgDFMtrekeyZh\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x9571dc622ba98744f680dc3a9f6b048cb3c64ad6e0192eafd9076bf424e74a98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f80cd0226eb2369aa5e171b0c55c44711a3505d2b0b95dc3666c5d263d55a36\",\"dweb:/ipfs/QmbDYnnYYseMmz2ZrrfVcx7MYxB6bsUQSz4P8Vx7uM2MHr\"]},\"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol\":{\"keccak256\":\"0x7aed03e8ed1587fb516cb86d94213ee2b0f379702cefe088621804a7d422ab50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0bbcc70569eba641128e1c395506aecf4329041c61d5c2343ba826537c783e9\",\"dweb:/ipfs/QmfF2AK9yhFuoZ8UZ1q15xonCcnsSTtgsjfyEKFJjZcFmt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 259,
								"contract": "nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "nft",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC721)193"
							},
							{
								"astId": 262,
								"contract": "nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "rewardToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 264,
								"contract": "nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "rewardWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 266,
								"contract": "nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "rewardPerTokenPerDay",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 270,
								"contract": "nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "stakedTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 274,
								"contract": "nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 278,
								"contract": "nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 282,
								"contract": "nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "reward",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)193": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Staking, NFT, ERC721",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1378:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "1403:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "1497:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1675:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1697:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:57:0"
									},
									"src": "1660:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "1738:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1906:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1929:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1954:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:63:0"
									},
									"src": "1891:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1975:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "2092:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:9:0"
									},
									"scope": 77,
									"src": "2046:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "2107:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "2243:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:9:0"
									},
									"scope": 77,
									"src": "2184:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "2258:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2483:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2495:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2529:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2528:6:0"
									},
									"scope": 77,
									"src": "2465:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2541:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2829:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2844:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2884:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2883:9:0"
									},
									"scope": 77,
									"src": "2810:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2899:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3563:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3580:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3614:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3613:6:0"
									},
									"scope": 77,
									"src": "3546:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "3626:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3949:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3971:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3991:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3939:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "4030:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4029:6:0"
									},
									"scope": 77,
									"src": "3918:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "1474:2564:0"
						}
					],
					"src": "1378:2661:0"
				},
				"id": 0
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC721": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1380:23:1"
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 80,
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 246,
							"src": "1405:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 82,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 245,
										"src": "1543:7:1"
									},
									"id": 83,
									"nodeType": "InheritanceSpecifier",
									"src": "1543:7:1"
								}
							],
							"contractDependencies": [
								245
							],
							"contractKind": "interface",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "1454:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								245
							],
							"name": "IERC721",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "1557:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 92,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1665:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1687:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "1707:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1664:67:1"
									},
									"src": "1650:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1738:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 101,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1852:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1875:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1901:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:74:1"
									},
									"src": "1837:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1932:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 110,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2075:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2098:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2098:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2124:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2124:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:64:1"
									},
									"src": "2054:85:1"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "2145:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2245:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2244:15:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2283:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:17:1"
									},
									"scope": 193,
									"src": "2226:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "2306:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2459:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:17:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2499:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:15:1"
									},
									"scope": 193,
									"src": "2442:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2520:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3138:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3158:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3183:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3183:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:102:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3217:0:1"
									},
									"scope": 193,
									"src": "3081:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "3224:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "3951:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "3973:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "3993:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3941:73:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4023:0:1"
									},
									"scope": 193,
									"src": "3916:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4030:504:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4570:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4592:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4612:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4560:73:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4642:0:1"
									},
									"scope": 193,
									"src": "4539:104:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "4649:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5123:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5135:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5122:29:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5160:0:1"
									},
									"scope": 193,
									"src": "5106:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5167:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5508:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5508:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_approved",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5526:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5507:34:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5550:0:1"
									},
									"scope": 193,
									"src": "5481:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5557:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5722:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5721:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5762:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5761:18:1"
									},
									"scope": 193,
									"src": "5701:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5786:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "5955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "5970:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:33:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6011:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6011:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6010:6:1"
									},
									"scope": 193,
									"src": "5929:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 194,
							"src": "1522:4497:1"
						}
					],
					"src": "1380:4640:1"
				},
				"id": 1
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							211
						]
					},
					"id": 212,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1388:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "1413:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 211,
							"linearizedBaseContracts": [
								211
							],
							"name": "IERC721Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1598:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2131:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2157:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2179:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2204:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2204:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:108:2"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2248:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 207,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2248:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:8:2"
									},
									"scope": 211,
									"src": "2096:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 212,
							"src": "1566:692:2"
						}
					],
					"src": "1388:871:2"
				},
				"id": 2
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 213,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1358:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 214,
								"nodeType": "StructuredDocumentation",
								"src": "1383:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "1974:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 219,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1991:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1991:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 218,
												"id": 221,
												"nodeType": "Return",
												"src": "1984:17:3"
											}
										]
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:2:3"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1965:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1964:9:3"
									},
									"scope": 233,
									"src": "1912:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2081:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 228,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2098:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2098:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 227,
												"id": 230,
												"nodeType": "Return",
												"src": "2091:15:3"
											}
										]
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2031:2:3"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2065:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2065:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:16:3"
									},
									"scope": 233,
									"src": "2014:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 234,
							"src": "1880:235:3"
						}
					],
					"src": "1358:758:3"
				},
				"id": 3
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1372:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "1397:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1701:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2073:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2073:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2072:20:4"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2116:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2116:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:6:4"
									},
									"scope": 245,
									"src": "2046:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "1677:447:4"
						}
					],
					"src": "1372:753:4"
				},
				"id": 4
			},
			"nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/nft-staking-with-infinite-rewards.sol",
					"exportedSymbols": {
						"Context": [
							233
						],
						"IERC165": [
							245
						],
						"IERC20": [
							77
						],
						"IERC721": [
							193
						],
						"IERC721Receiver": [
							211
						],
						"NFTStakingPerToken": [
							541
						]
					},
					"id": 542,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1322:23:5"
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
							"id": 248,
							"nodeType": "ImportDirective",
							"scope": 542,
							"sourceUnit": 234,
							"src": "1349:85:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 249,
							"nodeType": "ImportDirective",
							"scope": 542,
							"sourceUnit": 78,
							"src": "1436:90:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 250,
							"nodeType": "ImportDirective",
							"scope": 542,
							"sourceUnit": 194,
							"src": "1528:92:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 251,
							"nodeType": "ImportDirective",
							"scope": 542,
							"sourceUnit": 212,
							"src": "1622:100:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 253,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 233,
										"src": "2393:7:5"
									},
									"id": 254,
									"nodeType": "InheritanceSpecifier",
									"src": "2393:7:5"
								},
								{
									"baseName": {
										"id": 255,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 211,
										"src": "2402:15:5"
									},
									"id": 256,
									"nodeType": "InheritanceSpecifier",
									"src": "2402:15:5"
								}
							],
							"contractDependencies": [
								211,
								233
							],
							"contractKind": "contract",
							"documentation": {
								"id": 252,
								"nodeType": "StructuredDocumentation",
								"src": "1726:632:5",
								"text": " @title NFT Staking with Infinite Rewards\n @author Breakthrough Labs Inc.\n @notice Staking, NFT, ERC721\n @dev NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate,\n and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT\n rate stays the same even when the number of staked NFTs increases/decreases.\n A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day."
							},
							"fullyImplemented": true,
							"id": 541,
							"linearizedBaseContracts": [
								541,
								211,
								233
							],
							"name": "NFTStakingPerToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 259,
									"mutability": "mutable",
									"name": "nft",
									"nodeType": "VariableDeclaration",
									"scope": 541,
									"src": "2425:18:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$193",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 258,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 257,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 193,
											"src": "2425:7:5"
										},
										"referencedDeclaration": 193,
										"src": "2425:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$193",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 262,
									"mutability": "mutable",
									"name": "rewardToken",
									"nodeType": "VariableDeclaration",
									"scope": 541,
									"src": "2450:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 261,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 260,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "2450:6:5"
										},
										"referencedDeclaration": 77,
										"src": "2450:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb75b2c7",
									"id": 264,
									"mutability": "mutable",
									"name": "rewardWallet",
									"nodeType": "VariableDeclaration",
									"scope": 541,
									"src": "2482:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 263,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2482:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d6a1fa6",
									"id": 266,
									"mutability": "mutable",
									"name": "rewardPerTokenPerDay",
									"nodeType": "VariableDeclaration",
									"scope": 541,
									"src": "2516:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2516:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 270,
									"mutability": "mutable",
									"name": "stakedTokens",
									"nodeType": "VariableDeclaration",
									"scope": 541,
									"src": "2560:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 269,
										"keyType": {
											"id": 267,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2568:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2560:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 268,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2579:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 274,
									"mutability": "mutable",
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 541,
									"src": "2615:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 273,
										"keyType": {
											"id": 271,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2623:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2615:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 272,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2634:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2ce9aead",
									"id": 278,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nodeType": "VariableDeclaration",
									"scope": 541,
									"src": "2666:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 277,
										"keyType": {
											"id": 275,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2674:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2666:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 276,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2685:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 282,
									"mutability": "mutable",
									"name": "reward",
									"nodeType": "VariableDeclaration",
									"scope": 541,
									"src": "2722:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 281,
										"keyType": {
											"id": 279,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2730:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2722:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 280,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2741:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "3196:184:5",
										"statements": [
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 294,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "3207:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$193",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 296,
																"name": "nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "3221:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 295,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "3213:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$193_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3213:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$193",
															"typeString": "contract IERC721"
														}
													},
													"src": "3207:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$193",
														"typeString": "contract IERC721"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "3207:25:5"
											},
											{
												"expression": {
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "3243:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 302,
																"name": "rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "3264:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 301,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3257:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3257:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "3243:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "3243:40:5"
											},
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "rewardWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3294:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 307,
														"name": "rewardWalletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "3309:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3294:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "3294:34:5"
											},
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 310,
														"name": "rewardPerTokenPerDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3339:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 311,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "3362:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3339:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "3339:33:5"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "2773:265:5",
										"text": " @param nftAddress  Staked NFT Address\n @param rewardTokenAddress Reward Token Address\n @param rewardWalletAddress Wallet that holds rewards to be paid out\n @param rewardRate # of tokens per staked NFT per day | precision:18"
									},
									"id": 315,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "nftAddress",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3066:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3066:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "rewardTokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3095:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "rewardWalletAddress",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3132:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "rewardRate",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3170:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:140:5"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3196:0:5"
									},
									"scope": 541,
									"src": "3044:336:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "3421:119:5",
										"statements": [
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 319,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3432:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 321,
														"indexExpression": {
															"id": 320,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3439:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3432:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 323,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "3460:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 322,
															"name": "available",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "3450:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3450:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3432:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "3432:36:5"
											},
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "lastUpdateTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "3479:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3494:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3479:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 330,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3505:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3505:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3479:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "3479:41:5"
											},
											{
												"id": 334,
												"nodeType": "PlaceholderStatement",
												"src": "3531:1:5"
											}
										]
									},
									"id": 336,
									"name": "update",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "3404:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3403:17:5"
									},
									"src": "3388:152:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "3737:243:5",
										"statements": [
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "3748:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3748:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 352,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 346,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3770:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3770:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 348,
															"name": "lastUpdateTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "3788:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 350,
														"indexExpression": {
															"id": 349,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3803:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3788:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3770:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3748:63:5"
											},
											{
												"assignments": [
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "earned",
														"nodeType": "VariableDeclaration",
														"scope": 372,
														"src": "3822:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 365,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 355,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 274,
																			"src": "3840:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 357,
																		"indexExpression": {
																			"id": 356,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "3850:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3840:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 358,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "3874:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3840:45:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 360,
																	"name": "rewardPerTokenPerDay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3901:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3840:81:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 362,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3839:83:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3836343030",
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3925:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "3839:91:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:108:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 366,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3948:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 368,
														"indexExpression": {
															"id": 367,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3955:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3948:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 369,
														"name": "earned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "3966:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3948:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 371,
												"nodeType": "Return",
												"src": "3941:31:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "3548:117:5",
										"text": " @dev returns the number of reward tokens available for an address\n @param account account"
									},
									"functionSelector": "10098ad5",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "available",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3690:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3690:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3689:17:5"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3728:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3728:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3727:9:5"
									},
									"scope": 541,
									"src": "3671:309:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "4117:77:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 382,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "4149:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 386,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4171:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$541",
																		"typeString": "contract NFTStakingPerToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$541",
																		"typeString": "contract NFTStakingPerToken"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4163:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4163:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4163:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "4178:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 379,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4128:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$193",
																"typeString": "contract IERC721"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 148,
														"src": "4128:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4128:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "4128:58:5"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "3988:82:5",
										"text": " @dev stakes a specific tokenID\n @param tokenId tokenId"
									},
									"functionSelector": "a694fc3a",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "4091:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4090:17:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4117:0:5"
									},
									"scope": 541,
									"src": "4076:118:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "4373:229:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 403,
																	"name": "stakedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "4392:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 405,
																"indexExpression": {
																	"id": 404,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "4405:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4392:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 406,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "4417:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4417:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4392:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206973206e6f74207374616b65642e",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4431:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034",
																"typeString": "literal_string \"Token is not staked.\""
															},
															"value": "Token is not staked."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034",
																"typeString": "literal_string \"Token is not staked.\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4384:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4384:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "4384:70:5"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4465:28:5",
													"subExpression": {
														"baseExpression": {
															"id": 412,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4472:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 414,
														"indexExpression": {
															"id": 413,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4485:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4472:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "4465:28:5"
											},
											{
												"expression": {
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "4504:25:5",
													"subExpression": {
														"baseExpression": {
															"id": 417,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4504:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 420,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 418,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "4514:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4514:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4504:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "4504:25:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 428,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4565:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$541",
																		"typeString": "contract NFTStakingPerToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$541",
																		"typeString": "contract NFTStakingPerToken"
																	}
																],
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4557:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 426,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4557:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4557:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 430,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "4572:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4572:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4586:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 423,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4540:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$193",
																"typeString": "contract IERC721"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "4540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4540:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "4540:54:5"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "4202:100:5",
										"text": " @dev withdraws a token from the staking contract\n @param tokenId tokenId"
									},
									"functionSelector": "2e1a7d4d",
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 398,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4359:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4359:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 400,
											"modifierName": {
												"id": 397,
												"name": "update",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 336,
												"src": "4352:6:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4352:20:5"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "4326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4325:17:5"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4373:0:5"
									},
									"scope": 541,
									"src": "4308:294:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "4725:502:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 506,
														"src": "4732:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4732:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"baseExpression": {
														"id": 446,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "4749:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 449,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 447,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "4756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4756:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4749:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4732:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "4784:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4793:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4784:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f2072656465656d",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4796:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290",
																"typeString": "literal_string \"Nothing to redeem\""
															},
															"value": "Nothing to redeem"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290",
																"typeString": "literal_string \"Nothing to redeem\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4776:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4776:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "4776:40:5"
											},
											{
												"expression": {
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 458,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "4823:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 461,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 459,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "4830:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4830:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4823:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4846:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4823:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "4823:24:5"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "allowance",
														"nodeType": "VariableDeclaration",
														"scope": 506,
														"src": "4856:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4856:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [
														{
															"id": 469,
															"name": "rewardWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4898:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 472,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4920:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$541",
																		"typeString": "contract NFTStakingPerToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$541",
																		"typeString": "contract NFTStakingPerToken"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4912:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4912:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4912:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 467,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "4876:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "4876:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4856:70:5"
											},
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "rewardWalletBalance",
														"nodeType": "VariableDeclaration",
														"scope": 506,
														"src": "4933:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4933:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"id": 480,
															"name": "rewardWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4985:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 478,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "4963:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "4963:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4963:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4933:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 484,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "5013:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 485,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5026:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5013:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436865636b20746865207265776172642077616c6c6574277320616c6c6f77616e6365",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5034:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c6481be45433f8a4fa4dba998a6b9df8caf30eb95aa71ca57432c30a0b6c34f",
																"typeString": "literal_string \"Check the reward wallet's allowance\""
															},
															"value": "Check the reward wallet's allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c6481be45433f8a4fa4dba998a6b9df8caf30eb95aa71ca57432c30a0b6c34f",
																"typeString": "literal_string \"Check the reward wallet's allowance\""
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5005:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5005:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "5005:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 491,
																"name": "rewardWalletBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "5087:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 492,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5110:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5087:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436865636b20746865207265776172642077616c6c657427732062616c616e6365",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5118:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8209871dbc5c1c0faeeae3916a29a6802ec284e44588f790fc2ee21b2e667ad2",
																"typeString": "literal_string \"Check the reward wallet's balance\""
															},
															"value": "Check the reward wallet's balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8209871dbc5c1c0faeeae3916a29a6802ec284e44588f790fc2ee21b2e667ad2",
																"typeString": "literal_string \"Check the reward wallet's balance\""
															}
														],
														"id": 490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5079:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5079:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "5079:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 500,
															"name": "rewardWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "5188:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 501,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "5202:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5202:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "5216:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 497,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "5163:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "5163:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5163:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "5163:60:5"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "4610:64:5",
										"text": " @dev redeems all of a user's reward tokens."
									},
									"functionSelector": "be040fb0",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 440,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4711:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4711:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 442,
											"modifierName": {
												"id": 439,
												"name": "update",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 336,
												"src": "4704:6:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4704:20:5"
										}
									],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4692:2:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4725:0:5"
									},
									"scope": 541,
									"src": "4677:550:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										210
									],
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "5412:134:5",
										"statements": [
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 524,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "5423:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 526,
														"indexExpression": {
															"id": 525,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5436:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5423:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 527,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "5447:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5423:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "5423:28:5"
											},
											{
												"expression": {
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5462:17:5",
													"subExpression": {
														"baseExpression": {
															"id": 530,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5462:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 532,
														"indexExpression": {
															"id": 531,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "5472:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5462:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "5462:17:5"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 535,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "5497:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$211_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 210,
														"src": "5497:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "5497:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 523,
												"id": 538,
												"nodeType": "Return",
												"src": "5490:48:5"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 519,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 511,
													"src": "5389:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 520,
											"modifierName": {
												"id": 518,
												"name": "update",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 336,
												"src": "5382:6:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5382:12:5"
										}
									],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 517,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5373:8:5"
									},
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "5275:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "5293:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5293:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "5316:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "5342:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5342:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:99:5"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "5404:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 521,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5404:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:8:5"
									},
									"scope": 541,
									"src": "5238:308:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 542,
							"src": "2362:3187:5"
						}
					],
					"src": "1322:4231:5"
				},
				"id": 5
			}
		}
	}
}